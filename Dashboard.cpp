#include "pch.h"
#include "Dashboard.h"
#include <bakkesmod/wrappers/GameWrapper.h>
#include <bakkesmod/wrappers/GameEvent/ServerWrapper.h>
#include <bakkesmod/wrappers/GameEvent/GameEventWrapper.h>
#include <bakkesmod/wrappers/GameObject/TeamWrapper.h>
#include <bakkesmod/wrappers/GameObject/CarWrapper.h>
#include <bakkesmod/wrappers/GameObject/TeamInfoWrapper.h>
#include <bakkesmod/wrappers/GameObject/PriWrapper.h>
#include <bakkesmod/wrappers/GameEvent/TeamGameEventWrapper.h>
#include <bakkesmod/wrappers/Engine/ActorWrapper.h>
#include <bakkesmod/wrappers/Engine/ObjectWrapper.h>
#include <aws/dynamodb/DynamoDBClient.h>
#include <aws/dynamodb/model/ListTablesRequest.h>
#include <aws/dynamodb/model/ListTablesResult.h>
#include <aws/dynamodb/model/PutItemRequest.h>
#include <aws/dynamodb/model/PutItemResult.h>
#include <aws/dynamodb/model/AttributeValue.h>
#include <aws/s3/S3Client.h>
#include <aws/s3/model/PutObjectRequest.h>
#include <aws/s3/model/HeadObjectRequest.h>
#include <sstream>
#include <iostream>
#include <functional>
#include <thread>
#include <chrono>
#include <iomanip>
#include <ctime>


BAKKESMOD_PLUGIN(Dashboard, "Rocket League Game Dashboard", "1.0", PLUGINTYPE_FREEPLAY)


Dashboard::Dashboard() {
    // Initialize data map for lookup table
    dataMap["0"]["up0"] = 0.5;
    dataMap["0"]["up1"] = 0.61009900990099;
    dataMap["0"]["up2"] = 0.75;
    dataMap["0"]["up3"] = 0.801234567901235;
    dataMap["0"]["up4"] = 0.920566037735849;
    dataMap["1"]["up0"] = 0.5;
    dataMap["1"]["up1"] = 0.61019801980198;
    dataMap["1"]["up2"] = 0.750833333333333;
    dataMap["1"]["up3"] = 0.802469135802469;
    dataMap["1"]["up4"] = 0.921132075471698;
    dataMap["2"]["up0"] = 0.5;
    dataMap["2"]["up1"] = 0.61029702970297;
    dataMap["2"]["up2"] = 0.751666666666667;
    dataMap["2"]["up3"] = 0.803703703703704;
    dataMap["2"]["up4"] = 0.921698113207547;
    dataMap["3"]["up0"] = 0.5;
    dataMap["3"]["up1"] = 0.61039603960396;
    dataMap["3"]["up2"] = 0.7525;
    dataMap["3"]["up3"] = 0.804938271604938;
    dataMap["3"]["up4"] = 0.922264150943396;
    dataMap["4"]["up0"] = 0.5;
    dataMap["4"]["up1"] = 0.61049504950495;
    dataMap["4"]["up2"] = 0.753333333333333;
    dataMap["4"]["up3"] = 0.806172839506173;
    dataMap["4"]["up4"] = 0.922830188679245;
    dataMap["5"]["up0"] = 0.5;
    dataMap["5"]["up1"] = 0.610594059405941;
    dataMap["5"]["up2"] = 0.754166666666667;
    dataMap["5"]["up3"] = 0.807407407407407;
    dataMap["5"]["up4"] = 0.923396226415094;
    dataMap["6"]["up0"] = 0.5;
    dataMap["6"]["up1"] = 0.610693069306931;
    dataMap["6"]["up2"] = 0.755;
    dataMap["6"]["up3"] = 0.808641975308642;
    dataMap["6"]["up4"] = 0.923962264150943;
    dataMap["7"]["up0"] = 0.5;
    dataMap["7"]["up1"] = 0.610792079207921;
    dataMap["7"]["up2"] = 0.755833333333333;
    dataMap["7"]["up3"] = 0.809876543209877;
    dataMap["7"]["up4"] = 0.924528301886792;
    dataMap["8"]["up0"] = 0.5;
    dataMap["8"]["up1"] = 0.610891089108911;
    dataMap["8"]["up2"] = 0.756666666666667;
    dataMap["8"]["up3"] = 0.811111111111111;
    dataMap["8"]["up4"] = 0.925094339622642;
    dataMap["9"]["up0"] = 0.5;
    dataMap["9"]["up1"] = 0.610990099009901;
    dataMap["9"]["up2"] = 0.7575;
    dataMap["9"]["up3"] = 0.812345679012346;
    dataMap["9"]["up4"] = 0.925660377358491;
    dataMap["10"]["up0"] = 0.5;
    dataMap["10"]["up1"] = 0.611089108910891;
    dataMap["10"]["up2"] = 0.758333333333333;
    dataMap["10"]["up3"] = 0.81358024691358;
    dataMap["10"]["up4"] = 0.92622641509434;
    dataMap["11"]["up0"] = 0.5;
    dataMap["11"]["up1"] = 0.611188118811881;
    dataMap["11"]["up2"] = 0.759166666666667;
    dataMap["11"]["up3"] = 0.814814814814815;
    dataMap["11"]["up4"] = 0.926792452830189;
    dataMap["12"]["up0"] = 0.5;
    dataMap["12"]["up1"] = 0.611287128712871;
    dataMap["12"]["up2"] = 0.76;
    dataMap["12"]["up3"] = 0.816049382716049;
    dataMap["12"]["up4"] = 0.927358490566038;
    dataMap["13"]["up0"] = 0.5;
    dataMap["13"]["up1"] = 0.611386138613861;
    dataMap["13"]["up2"] = 0.760833333333333;
    dataMap["13"]["up3"] = 0.817283950617284;
    dataMap["13"]["up4"] = 0.927924528301887;
    dataMap["14"]["up0"] = 0.5;
    dataMap["14"]["up1"] = 0.611485148514851;
    dataMap["14"]["up2"] = 0.761666666666667;
    dataMap["14"]["up3"] = 0.818518518518519;
    dataMap["14"]["up4"] = 0.928490566037736;
    dataMap["15"]["up0"] = 0.5;
    dataMap["15"]["up1"] = 0.611584158415842;
    dataMap["15"]["up2"] = 0.7625;
    dataMap["15"]["up3"] = 0.819753086419753;
    dataMap["15"]["up4"] = 0.929056603773585;
    dataMap["16"]["up0"] = 0.5;
    dataMap["16"]["up1"] = 0.611683168316832;
    dataMap["16"]["up2"] = 0.763333333333333;
    dataMap["16"]["up3"] = 0.820987654320988;
    dataMap["16"]["up4"] = 0.929622641509434;
    dataMap["17"]["up0"] = 0.5;
    dataMap["17"]["up1"] = 0.611782178217822;
    dataMap["17"]["up2"] = 0.764166666666667;
    dataMap["17"]["up3"] = 0.822222222222222;
    dataMap["17"]["up4"] = 0.930188679245283;
    dataMap["18"]["up0"] = 0.5;
    dataMap["18"]["up1"] = 0.611881188118812;
    dataMap["18"]["up2"] = 0.765;
    dataMap["18"]["up3"] = 0.823456790123457;
    dataMap["18"]["up4"] = 0.930754716981132;
    dataMap["19"]["up0"] = 0.5;
    dataMap["19"]["up1"] = 0.611980198019802;
    dataMap["19"]["up2"] = 0.765833333333333;
    dataMap["19"]["up3"] = 0.824691358024691;
    dataMap["19"]["up4"] = 0.931320754716981;
    dataMap["20"]["up0"] = 0.5;
    dataMap["20"]["up1"] = 0.612079207920792;
    dataMap["20"]["up2"] = 0.766666666666667;
    dataMap["20"]["up3"] = 0.825925925925926;
    dataMap["20"]["up4"] = 0.93188679245283;
    dataMap["21"]["up0"] = 0.5;
    dataMap["21"]["up1"] = 0.612178217821782;
    dataMap["21"]["up2"] = 0.7675;
    dataMap["21"]["up3"] = 0.827160493827161;
    dataMap["21"]["up4"] = 0.932452830188679;
    dataMap["22"]["up0"] = 0.5;
    dataMap["22"]["up1"] = 0.612277227722772;
    dataMap["22"]["up2"] = 0.768333333333333;
    dataMap["22"]["up3"] = 0.828395061728395;
    dataMap["22"]["up4"] = 0.933018867924528;
    dataMap["23"]["up0"] = 0.5;
    dataMap["23"]["up1"] = 0.612376237623762;
    dataMap["23"]["up2"] = 0.769166666666667;
    dataMap["23"]["up3"] = 0.82962962962963;
    dataMap["23"]["up4"] = 0.933584905660377;
    dataMap["24"]["up0"] = 0.5;
    dataMap["24"]["up1"] = 0.612475247524752;
    dataMap["24"]["up2"] = 0.77;
    dataMap["24"]["up3"] = 0.830864197530864;
    dataMap["24"]["up4"] = 0.934150943396226;
    dataMap["25"]["up0"] = 0.5;
    dataMap["25"]["up1"] = 0.612574257425743;
    dataMap["25"]["up2"] = 0.770833333333333;
    dataMap["25"]["up3"] = 0.832098765432099;
    dataMap["25"]["up4"] = 0.934716981132075;
    dataMap["26"]["up0"] = 0.5;
    dataMap["26"]["up1"] = 0.612673267326733;
    dataMap["26"]["up2"] = 0.771666666666667;
    dataMap["26"]["up3"] = 0.833333333333333;
    dataMap["26"]["up4"] = 0.935283018867925;
    dataMap["27"]["up0"] = 0.5;
    dataMap["27"]["up1"] = 0.612772277227723;
    dataMap["27"]["up2"] = 0.7725;
    dataMap["27"]["up3"] = 0.834567901234568;
    dataMap["27"]["up4"] = 0.935849056603774;
    dataMap["28"]["up0"] = 0.5;
    dataMap["28"]["up1"] = 0.612871287128713;
    dataMap["28"]["up2"] = 0.773333333333333;
    dataMap["28"]["up3"] = 0.835802469135802;
    dataMap["28"]["up4"] = 0.936415094339623;
    dataMap["29"]["up0"] = 0.5;
    dataMap["29"]["up1"] = 0.612970297029703;
    dataMap["29"]["up2"] = 0.774166666666667;
    dataMap["29"]["up3"] = 0.837037037037037;
    dataMap["29"]["up4"] = 0.936981132075472;
    dataMap["30"]["up0"] = 0.5;
    dataMap["30"]["up1"] = 0.613069306930693;
    dataMap["30"]["up2"] = 0.775;
    dataMap["30"]["up3"] = 0.838271604938272;
    dataMap["30"]["up4"] = 0.937547169811321;
    dataMap["31"]["up0"] = 0.5;
    dataMap["31"]["up1"] = 0.613168316831683;
    dataMap["31"]["up2"] = 0.775833333333333;
    dataMap["31"]["up3"] = 0.839506172839506;
    dataMap["31"]["up4"] = 0.93811320754717;
    dataMap["32"]["up0"] = 0.5;
    dataMap["32"]["up1"] = 0.613267326732673;
    dataMap["32"]["up2"] = 0.776666666666667;
    dataMap["32"]["up3"] = 0.840740740740741;
    dataMap["32"]["up4"] = 0.938679245283019;
    dataMap["33"]["up0"] = 0.5;
    dataMap["33"]["up1"] = 0.613366336633663;
    dataMap["33"]["up2"] = 0.7775;
    dataMap["33"]["up3"] = 0.841975308641975;
    dataMap["33"]["up4"] = 0.939245283018868;
    dataMap["34"]["up0"] = 0.5;
    dataMap["34"]["up1"] = 0.613465346534653;
    dataMap["34"]["up2"] = 0.778333333333333;
    dataMap["34"]["up3"] = 0.84320987654321;
    dataMap["34"]["up4"] = 0.939811320754717;
    dataMap["35"]["up0"] = 0.5;
    dataMap["35"]["up1"] = 0.613564356435644;
    dataMap["35"]["up2"] = 0.779166666666667;
    dataMap["35"]["up3"] = 0.844444444444444;
    dataMap["35"]["up4"] = 0.940377358490566;
    dataMap["36"]["up0"] = 0.5;
    dataMap["36"]["up1"] = 0.613663366336634;
    dataMap["36"]["up2"] = 0.78;
    dataMap["36"]["up3"] = 0.845679012345679;
    dataMap["36"]["up4"] = 0.940943396226415;
    dataMap["37"]["up0"] = 0.5;
    dataMap["37"]["up1"] = 0.613762376237624;
    dataMap["37"]["up2"] = 0.780833333333333;
    dataMap["37"]["up3"] = 0.846913580246914;
    dataMap["37"]["up4"] = 0.941509433962264;
    dataMap["38"]["up0"] = 0.5;
    dataMap["38"]["up1"] = 0.613861386138614;
    dataMap["38"]["up2"] = 0.781666666666667;
    dataMap["38"]["up3"] = 0.848148148148148;
    dataMap["38"]["up4"] = 0.942075471698113;
    dataMap["39"]["up0"] = 0.5;
    dataMap["39"]["up1"] = 0.613960396039604;
    dataMap["39"]["up2"] = 0.7825;
    dataMap["39"]["up3"] = 0.849382716049383;
    dataMap["39"]["up4"] = 0.942641509433962;
    dataMap["40"]["up0"] = 0.5;
    dataMap["40"]["up1"] = 0.614059405940594;
    dataMap["40"]["up2"] = 0.783333333333333;
    dataMap["40"]["up3"] = 0.850617283950617;
    dataMap["40"]["up4"] = 0.943207547169811;
    dataMap["41"]["up0"] = 0.5;
    dataMap["41"]["up1"] = 0.614158415841584;
    dataMap["41"]["up2"] = 0.784166666666667;
    dataMap["41"]["up3"] = 0.851851851851852;
    dataMap["41"]["up4"] = 0.94377358490566;
    dataMap["42"]["up0"] = 0.5;
    dataMap["42"]["up1"] = 0.614257425742574;
    dataMap["42"]["up2"] = 0.785;
    dataMap["42"]["up3"] = 0.853086419753086;
    dataMap["42"]["up4"] = 0.944339622641509;
    dataMap["43"]["up0"] = 0.5;
    dataMap["43"]["up1"] = 0.614356435643564;
    dataMap["43"]["up2"] = 0.785833333333333;
    dataMap["43"]["up3"] = 0.854320987654321;
    dataMap["43"]["up4"] = 0.944905660377358;
    dataMap["44"]["up0"] = 0.5;
    dataMap["44"]["up1"] = 0.614455445544554;
    dataMap["44"]["up2"] = 0.786666666666667;
    dataMap["44"]["up3"] = 0.855555555555556;
    dataMap["44"]["up4"] = 0.945471698113208;
    dataMap["45"]["up0"] = 0.5;
    dataMap["45"]["up1"] = 0.614554455445545;
    dataMap["45"]["up2"] = 0.7875;
    dataMap["45"]["up3"] = 0.85679012345679;
    dataMap["45"]["up4"] = 0.946037735849057;
    dataMap["46"]["up0"] = 0.5;
    dataMap["46"]["up1"] = 0.614653465346535;
    dataMap["46"]["up2"] = 0.788333333333333;
    dataMap["46"]["up3"] = 0.858024691358025;
    dataMap["46"]["up4"] = 0.946603773584906;
    dataMap["47"]["up0"] = 0.5;
    dataMap["47"]["up1"] = 0.614752475247525;
    dataMap["47"]["up2"] = 0.789166666666667;
    dataMap["47"]["up3"] = 0.859259259259259;
    dataMap["47"]["up4"] = 0.947169811320755;
    dataMap["48"]["up0"] = 0.5;
    dataMap["48"]["up1"] = 0.614851485148515;
    dataMap["48"]["up2"] = 0.79;
    dataMap["48"]["up3"] = 0.860493827160494;
    dataMap["48"]["up4"] = 0.947735849056604;
    dataMap["49"]["up0"] = 0.5;
    dataMap["49"]["up1"] = 0.614950495049505;
    dataMap["49"]["up2"] = 0.790833333333333;
    dataMap["49"]["up3"] = 0.861728395061728;
    dataMap["49"]["up4"] = 0.948301886792453;
    dataMap["50"]["up0"] = 0.5;
    dataMap["50"]["up1"] = 0.615049504950495;
    dataMap["50"]["up2"] = 0.791666666666667;
    dataMap["50"]["up3"] = 0.862962962962963;
    dataMap["50"]["up4"] = 0.948867924528302;
    dataMap["51"]["up0"] = 0.5;
    dataMap["51"]["up1"] = 0.615148514851485;
    dataMap["51"]["up2"] = 0.7925;
    dataMap["51"]["up3"] = 0.864197530864198;
    dataMap["51"]["up4"] = 0.949433962264151;
    dataMap["52"]["up0"] = 0.5;
    dataMap["52"]["up1"] = 0.615247524752475;
    dataMap["52"]["up2"] = 0.793333333333333;
    dataMap["52"]["up3"] = 0.865432098765432;
    dataMap["52"]["up4"] = 0.95;
    dataMap["53"]["up0"] = 0.5;
    dataMap["53"]["up1"] = 0.615346534653465;
    dataMap["53"]["up2"] = 0.794166666666667;
    dataMap["53"]["up3"] = 0.866666666666667;
    dataMap["53"]["up4"] = 0.950357142857143;
    dataMap["54"]["up0"] = 0.5;
    dataMap["54"]["up1"] = 0.615445544554455;
    dataMap["54"]["up2"] = 0.795;
    dataMap["54"]["up3"] = 0.867901234567901;
    dataMap["54"]["up4"] = 0.950714285714286;
    dataMap["55"]["up0"] = 0.5;
    dataMap["55"]["up1"] = 0.615544554455446;
    dataMap["55"]["up2"] = 0.795833333333333;
    dataMap["55"]["up3"] = 0.869135802469136;
    dataMap["55"]["up4"] = 0.951071428571429;
    dataMap["56"]["up0"] = 0.5;
    dataMap["56"]["up1"] = 0.615643564356436;
    dataMap["56"]["up2"] = 0.796666666666667;
    dataMap["56"]["up3"] = 0.87037037037037;
    dataMap["56"]["up4"] = 0.951428571428571;
    dataMap["57"]["up0"] = 0.5;
    dataMap["57"]["up1"] = 0.615742574257426;
    dataMap["57"]["up2"] = 0.7975;
    dataMap["57"]["up3"] = 0.871604938271605;
    dataMap["57"]["up4"] = 0.951785714285714;
    dataMap["58"]["up0"] = 0.5;
    dataMap["58"]["up1"] = 0.615841584158416;
    dataMap["58"]["up2"] = 0.798333333333333;
    dataMap["58"]["up3"] = 0.87283950617284;
    dataMap["58"]["up4"] = 0.952142857142857;
    dataMap["59"]["up0"] = 0.5;
    dataMap["59"]["up1"] = 0.615940594059406;
    dataMap["59"]["up2"] = 0.799166666666667;
    dataMap["59"]["up3"] = 0.874074074074074;
    dataMap["59"]["up4"] = 0.9525;
    dataMap["60"]["up0"] = 0.5;
    dataMap["60"]["up1"] = 0.616039603960396;
    dataMap["60"]["up2"] = 0.8;
    dataMap["60"]["up3"] = 0.875308641975309;
    dataMap["60"]["up4"] = 0.952857142857143;
    dataMap["61"]["up0"] = 0.5;
    dataMap["61"]["up1"] = 0.616138613861386;
    dataMap["61"]["up2"] = 0.800833333333333;
    dataMap["61"]["up3"] = 0.876543209876543;
    dataMap["61"]["up4"] = 0.953214285714286;
    dataMap["62"]["up0"] = 0.5;
    dataMap["62"]["up1"] = 0.616237623762376;
    dataMap["62"]["up2"] = 0.801666666666667;
    dataMap["62"]["up3"] = 0.877777777777778;
    dataMap["62"]["up4"] = 0.953571428571429;
    dataMap["63"]["up0"] = 0.5;
    dataMap["63"]["up1"] = 0.616336633663366;
    dataMap["63"]["up2"] = 0.8025;
    dataMap["63"]["up3"] = 0.879012345679012;
    dataMap["63"]["up4"] = 0.953928571428571;
    dataMap["64"]["up0"] = 0.5;
    dataMap["64"]["up1"] = 0.616435643564356;
    dataMap["64"]["up2"] = 0.803333333333333;
    dataMap["64"]["up3"] = 0.880246913580247;
    dataMap["64"]["up4"] = 0.954285714285714;
    dataMap["65"]["up0"] = 0.5;
    dataMap["65"]["up1"] = 0.616534653465347;
    dataMap["65"]["up2"] = 0.804166666666667;
    dataMap["65"]["up3"] = 0.881481481481482;
    dataMap["65"]["up4"] = 0.954642857142857;
    dataMap["66"]["up0"] = 0.5;
    dataMap["66"]["up1"] = 0.616633663366337;
    dataMap["66"]["up2"] = 0.805;
    dataMap["66"]["up3"] = 0.882716049382716;
    dataMap["66"]["up4"] = 0.955;
    dataMap["67"]["up0"] = 0.5;
    dataMap["67"]["up1"] = 0.616732673267327;
    dataMap["67"]["up2"] = 0.805833333333333;
    dataMap["67"]["up3"] = 0.883950617283951;
    dataMap["67"]["up4"] = 0.955357142857143;
    dataMap["68"]["up0"] = 0.5;
    dataMap["68"]["up1"] = 0.616831683168317;
    dataMap["68"]["up2"] = 0.806666666666667;
    dataMap["68"]["up3"] = 0.885185185185185;
    dataMap["68"]["up4"] = 0.955714285714286;
    dataMap["69"]["up0"] = 0.5;
    dataMap["69"]["up1"] = 0.616930693069307;
    dataMap["69"]["up2"] = 0.8075;
    dataMap["69"]["up3"] = 0.88641975308642;
    dataMap["69"]["up4"] = 0.956071428571429;
    dataMap["70"]["up0"] = 0.5;
    dataMap["70"]["up1"] = 0.617029702970297;
    dataMap["70"]["up2"] = 0.808333333333333;
    dataMap["70"]["up3"] = 0.887654320987654;
    dataMap["70"]["up4"] = 0.956428571428571;
    dataMap["71"]["up0"] = 0.5;
    dataMap["71"]["up1"] = 0.617128712871287;
    dataMap["71"]["up2"] = 0.809166666666667;
    dataMap["71"]["up3"] = 0.888888888888889;
    dataMap["71"]["up4"] = 0.956785714285714;
    dataMap["72"]["up0"] = 0.5;
    dataMap["72"]["up1"] = 0.617227722772277;
    dataMap["72"]["up2"] = 0.81;
    dataMap["72"]["up3"] = 0.890123456790124;
    dataMap["72"]["up4"] = 0.957142857142857;
    dataMap["73"]["up0"] = 0.5;
    dataMap["73"]["up1"] = 0.617326732673267;
    dataMap["73"]["up2"] = 0.810833333333333;
    dataMap["73"]["up3"] = 0.891358024691358;
    dataMap["73"]["up4"] = 0.9575;
    dataMap["74"]["up0"] = 0.5;
    dataMap["74"]["up1"] = 0.617425742574257;
    dataMap["74"]["up2"] = 0.811666666666667;
    dataMap["74"]["up3"] = 0.892592592592593;
    dataMap["74"]["up4"] = 0.957857142857143;
    dataMap["75"]["up0"] = 0.5;
    dataMap["75"]["up1"] = 0.617524752475248;
    dataMap["75"]["up2"] = 0.8125;
    dataMap["75"]["up3"] = 0.893827160493827;
    dataMap["75"]["up4"] = 0.958214285714286;
    dataMap["76"]["up0"] = 0.5;
    dataMap["76"]["up1"] = 0.617623762376238;
    dataMap["76"]["up2"] = 0.813333333333333;
    dataMap["76"]["up3"] = 0.895061728395062;
    dataMap["76"]["up4"] = 0.958571428571429;
    dataMap["77"]["up0"] = 0.5;
    dataMap["77"]["up1"] = 0.617722772277228;
    dataMap["77"]["up2"] = 0.814166666666667;
    dataMap["77"]["up3"] = 0.896296296296296;
    dataMap["77"]["up4"] = 0.958928571428571;
    dataMap["78"]["up0"] = 0.5;
    dataMap["78"]["up1"] = 0.617821782178218;
    dataMap["78"]["up2"] = 0.815;
    dataMap["78"]["up3"] = 0.897530864197531;
    dataMap["78"]["up4"] = 0.959285714285714;
    dataMap["79"]["up0"] = 0.5;
    dataMap["79"]["up1"] = 0.617920792079208;
    dataMap["79"]["up2"] = 0.815833333333333;
    dataMap["79"]["up3"] = 0.898765432098765;
    dataMap["79"]["up4"] = 0.959642857142857;
    dataMap["80"]["up0"] = 0.5;
    dataMap["80"]["up1"] = 0.618019801980198;
    dataMap["80"]["up2"] = 0.816666666666667;
    dataMap["80"]["up3"] = 0.9;
    dataMap["80"]["up4"] = 0.96;
    dataMap["81"]["up0"] = 0.5;
    dataMap["81"]["up1"] = 0.618118811881188;
    dataMap["81"]["up2"] = 0.8175;
    dataMap["81"]["up3"] = 0.900892857142857;
    dataMap["81"]["up4"] = 0.960357142857143;
    dataMap["82"]["up0"] = 0.5;
    dataMap["82"]["up1"] = 0.618217821782178;
    dataMap["82"]["up2"] = 0.818333333333333;
    dataMap["82"]["up3"] = 0.901785714285714;
    dataMap["82"]["up4"] = 0.960714285714286;
    dataMap["83"]["up0"] = 0.5;
    dataMap["83"]["up1"] = 0.618316831683168;
    dataMap["83"]["up2"] = 0.819166666666667;
    dataMap["83"]["up3"] = 0.902678571428571;
    dataMap["83"]["up4"] = 0.961071428571429;
    dataMap["84"]["up0"] = 0.5;
    dataMap["84"]["up1"] = 0.618415841584158;
    dataMap["84"]["up2"] = 0.82;
    dataMap["84"]["up3"] = 0.903571428571429;
    dataMap["84"]["up4"] = 0.961428571428571;
    dataMap["85"]["up0"] = 0.5;
    dataMap["85"]["up1"] = 0.618514851485149;
    dataMap["85"]["up2"] = 0.820833333333333;
    dataMap["85"]["up3"] = 0.904464285714286;
    dataMap["85"]["up4"] = 0.961785714285714;
    dataMap["86"]["up0"] = 0.5;
    dataMap["86"]["up1"] = 0.618613861386139;
    dataMap["86"]["up2"] = 0.821666666666667;
    dataMap["86"]["up3"] = 0.905357142857143;
    dataMap["86"]["up4"] = 0.962142857142857;
    dataMap["87"]["up0"] = 0.5;
    dataMap["87"]["up1"] = 0.618712871287129;
    dataMap["87"]["up2"] = 0.8225;
    dataMap["87"]["up3"] = 0.90625;
    dataMap["87"]["up4"] = 0.9625;
    dataMap["88"]["up0"] = 0.5;
    dataMap["88"]["up1"] = 0.618811881188119;
    dataMap["88"]["up2"] = 0.823333333333333;
    dataMap["88"]["up3"] = 0.907142857142857;
    dataMap["88"]["up4"] = 0.962857142857143;
    dataMap["89"]["up0"] = 0.5;
    dataMap["89"]["up1"] = 0.618910891089109;
    dataMap["89"]["up2"] = 0.824166666666667;
    dataMap["89"]["up3"] = 0.908035714285714;
    dataMap["89"]["up4"] = 0.963214285714286;
    dataMap["90"]["up0"] = 0.5;
    dataMap["90"]["up1"] = 0.619009900990099;
    dataMap["90"]["up2"] = 0.825;
    dataMap["90"]["up3"] = 0.908928571428571;
    dataMap["90"]["up4"] = 0.963571428571429;
    dataMap["91"]["up0"] = 0.5;
    dataMap["91"]["up1"] = 0.619108910891089;
    dataMap["91"]["up2"] = 0.825833333333333;
    dataMap["91"]["up3"] = 0.909821428571429;
    dataMap["91"]["up4"] = 0.963928571428571;
    dataMap["92"]["up0"] = 0.5;
    dataMap["92"]["up1"] = 0.619207920792079;
    dataMap["92"]["up2"] = 0.826666666666667;
    dataMap["92"]["up3"] = 0.910714285714286;
    dataMap["92"]["up4"] = 0.964285714285714;
    dataMap["93"]["up0"] = 0.5;
    dataMap["93"]["up1"] = 0.619306930693069;
    dataMap["93"]["up2"] = 0.8275;
    dataMap["93"]["up3"] = 0.911607142857143;
    dataMap["93"]["up4"] = 0.964642857142857;
    dataMap["94"]["up0"] = 0.5;
    dataMap["94"]["up1"] = 0.619405940594059;
    dataMap["94"]["up2"] = 0.828333333333333;
    dataMap["94"]["up3"] = 0.9125;
    dataMap["94"]["up4"] = 0.965;
    dataMap["95"]["up0"] = 0.5;
    dataMap["95"]["up1"] = 0.61950495049505;
    dataMap["95"]["up2"] = 0.829166666666667;
    dataMap["95"]["up3"] = 0.913392857142857;
    dataMap["95"]["up4"] = 0.965357142857143;
    dataMap["96"]["up0"] = 0.5;
    dataMap["96"]["up1"] = 0.61960396039604;
    dataMap["96"]["up2"] = 0.83;
    dataMap["96"]["up3"] = 0.914285714285714;
    dataMap["96"]["up4"] = 0.965714285714286;
    dataMap["97"]["up0"] = 0.5;
    dataMap["97"]["up1"] = 0.61970297029703;
    dataMap["97"]["up2"] = 0.830833333333333;
    dataMap["97"]["up3"] = 0.915178571428571;
    dataMap["97"]["up4"] = 0.966071428571429;
    dataMap["98"]["up0"] = 0.5;
    dataMap["98"]["up1"] = 0.61980198019802;
    dataMap["98"]["up2"] = 0.831666666666667;
    dataMap["98"]["up3"] = 0.916071428571429;
    dataMap["98"]["up4"] = 0.966428571428571;
    dataMap["99"]["up0"] = 0.5;
    dataMap["99"]["up1"] = 0.61990099009901;
    dataMap["99"]["up2"] = 0.8325;
    dataMap["99"]["up3"] = 0.916964285714286;
    dataMap["99"]["up4"] = 0.966785714285714;
    dataMap["100"]["up0"] = 0.5;
    dataMap["100"]["up1"] = 0.62;
    dataMap["100"]["up2"] = 0.833333333333333;
    dataMap["100"]["up3"] = 0.917857142857143;
    dataMap["100"]["up4"] = 0.967142857142857;
    dataMap["101"]["up0"] = 0.5;
    dataMap["101"]["up1"] = 0.620681818181818;
    dataMap["101"]["up2"] = 0.834166666666667;
    dataMap["101"]["up3"] = 0.91875;
    dataMap["101"]["up4"] = 0.9675;
    dataMap["102"]["up0"] = 0.5;
    dataMap["102"]["up1"] = 0.621363636363636;
    dataMap["102"]["up2"] = 0.835;
    dataMap["102"]["up3"] = 0.919642857142857;
    dataMap["102"]["up4"] = 0.967857142857143;
    dataMap["103"]["up0"] = 0.5;
    dataMap["103"]["up1"] = 0.622045454545455;
    dataMap["103"]["up2"] = 0.835833333333333;
    dataMap["103"]["up3"] = 0.920535714285714;
    dataMap["103"]["up4"] = 0.968214285714286;
    dataMap["104"]["up0"] = 0.5;
    dataMap["104"]["up1"] = 0.622727272727273;
    dataMap["104"]["up2"] = 0.836666666666667;
    dataMap["104"]["up3"] = 0.921428571428571;
    dataMap["104"]["up4"] = 0.968571428571429;
    dataMap["105"]["up0"] = 0.5;
    dataMap["105"]["up1"] = 0.623409090909091;
    dataMap["105"]["up2"] = 0.8375;
    dataMap["105"]["up3"] = 0.922321428571429;
    dataMap["105"]["up4"] = 0.968928571428571;
    dataMap["106"]["up0"] = 0.5;
    dataMap["106"]["up1"] = 0.624090909090909;
    dataMap["106"]["up2"] = 0.838333333333333;
    dataMap["106"]["up3"] = 0.923214285714286;
    dataMap["106"]["up4"] = 0.969285714285714;
    dataMap["107"]["up0"] = 0.5;
    dataMap["107"]["up1"] = 0.624772727272727;
    dataMap["107"]["up2"] = 0.839166666666667;
    dataMap["107"]["up3"] = 0.924107142857143;
    dataMap["107"]["up4"] = 0.969642857142857;
    dataMap["108"]["up0"] = 0.5;
    dataMap["108"]["up1"] = 0.625454545454545;
    dataMap["108"]["up2"] = 0.84;
    dataMap["108"]["up3"] = 0.925;
    dataMap["108"]["up4"] = 0.97;
    dataMap["109"]["up0"] = 0.5;
    dataMap["109"]["up1"] = 0.626136363636364;
    dataMap["109"]["up2"] = 0.840833333333333;
    dataMap["109"]["up3"] = 0.925892857142857;
    dataMap["109"]["up4"] = 0.970375;
    dataMap["110"]["up0"] = 0.5;
    dataMap["110"]["up1"] = 0.626818181818182;
    dataMap["110"]["up2"] = 0.841666666666667;
    dataMap["110"]["up3"] = 0.926785714285714;
    dataMap["110"]["up4"] = 0.97075;
    dataMap["111"]["up0"] = 0.5;
    dataMap["111"]["up1"] = 0.6275;
    dataMap["111"]["up2"] = 0.8425;
    dataMap["111"]["up3"] = 0.927678571428571;
    dataMap["111"]["up4"] = 0.971125;
    dataMap["112"]["up0"] = 0.5;
    dataMap["112"]["up1"] = 0.628181818181818;
    dataMap["112"]["up2"] = 0.843333333333333;
    dataMap["112"]["up3"] = 0.928571428571429;
    dataMap["112"]["up4"] = 0.9715;
    dataMap["113"]["up0"] = 0.5;
    dataMap["113"]["up1"] = 0.628863636363636;
    dataMap["113"]["up2"] = 0.844166666666667;
    dataMap["113"]["up3"] = 0.929464285714286;
    dataMap["113"]["up4"] = 0.971875;
    dataMap["114"]["up0"] = 0.5;
    dataMap["114"]["up1"] = 0.629545454545455;
    dataMap["114"]["up2"] = 0.845;
    dataMap["114"]["up3"] = 0.930357142857143;
    dataMap["114"]["up4"] = 0.97225;
    dataMap["115"]["up0"] = 0.5;
    dataMap["115"]["up1"] = 0.630227272727273;
    dataMap["115"]["up2"] = 0.845833333333333;
    dataMap["115"]["up3"] = 0.93125;
    dataMap["115"]["up4"] = 0.972625;
    dataMap["116"]["up0"] = 0.5;
    dataMap["116"]["up1"] = 0.630909090909091;
    dataMap["116"]["up2"] = 0.846666666666667;
    dataMap["116"]["up3"] = 0.932142857142857;
    dataMap["116"]["up4"] = 0.973;
    dataMap["117"]["up0"] = 0.5;
    dataMap["117"]["up1"] = 0.631590909090909;
    dataMap["117"]["up2"] = 0.8475;
    dataMap["117"]["up3"] = 0.933035714285714;
    dataMap["117"]["up4"] = 0.973375;
    dataMap["118"]["up0"] = 0.5;
    dataMap["118"]["up1"] = 0.632272727272727;
    dataMap["118"]["up2"] = 0.848333333333333;
    dataMap["118"]["up3"] = 0.933928571428571;
    dataMap["118"]["up4"] = 0.97375;
    dataMap["119"]["up0"] = 0.5;
    dataMap["119"]["up1"] = 0.632954545454545;
    dataMap["119"]["up2"] = 0.849166666666667;
    dataMap["119"]["up3"] = 0.934821428571429;
    dataMap["119"]["up4"] = 0.974125;
    dataMap["120"]["up0"] = 0.5;
    dataMap["120"]["up1"] = 0.633636363636364;
    dataMap["120"]["up2"] = 0.85;
    dataMap["120"]["up3"] = 0.935714285714286;
    dataMap["120"]["up4"] = 0.9745;
    dataMap["121"]["up0"] = 0.5;
    dataMap["121"]["up1"] = 0.634318181818182;
    dataMap["121"]["up2"] = 0.850833333333333;
    dataMap["121"]["up3"] = 0.936607142857143;
    dataMap["121"]["up4"] = 0.974875;
    dataMap["122"]["up0"] = 0.5;
    dataMap["122"]["up1"] = 0.635;
    dataMap["122"]["up2"] = 0.851666666666667;
    dataMap["122"]["up3"] = 0.9375;
    dataMap["122"]["up4"] = 0.97525;
    dataMap["123"]["up0"] = 0.5;
    dataMap["123"]["up1"] = 0.635681818181818;
    dataMap["123"]["up2"] = 0.8525;
    dataMap["123"]["up3"] = 0.938392857142857;
    dataMap["123"]["up4"] = 0.975625;
    dataMap["124"]["up0"] = 0.5;
    dataMap["124"]["up1"] = 0.636363636363636;
    dataMap["124"]["up2"] = 0.853333333333333;
    dataMap["124"]["up3"] = 0.939285714285714;
    dataMap["124"]["up4"] = 0.976;
    dataMap["125"]["up0"] = 0.5;
    dataMap["125"]["up1"] = 0.637045454545455;
    dataMap["125"]["up2"] = 0.854166666666667;
    dataMap["125"]["up3"] = 0.940178571428571;
    dataMap["125"]["up4"] = 0.976375;
    dataMap["126"]["up0"] = 0.5;
    dataMap["126"]["up1"] = 0.637727272727273;
    dataMap["126"]["up2"] = 0.855;
    dataMap["126"]["up3"] = 0.941071428571429;
    dataMap["126"]["up4"] = 0.97675;
    dataMap["127"]["up0"] = 0.5;
    dataMap["127"]["up1"] = 0.638409090909091;
    dataMap["127"]["up2"] = 0.855833333333333;
    dataMap["127"]["up3"] = 0.941964285714286;
    dataMap["127"]["up4"] = 0.977125;
    dataMap["128"]["up0"] = 0.5;
    dataMap["128"]["up1"] = 0.639090909090909;
    dataMap["128"]["up2"] = 0.856666666666667;
    dataMap["128"]["up3"] = 0.942857142857143;
    dataMap["128"]["up4"] = 0.9775;
    dataMap["129"]["up0"] = 0.5;
    dataMap["129"]["up1"] = 0.639772727272727;
    dataMap["129"]["up2"] = 0.8575;
    dataMap["129"]["up3"] = 0.94375;
    dataMap["129"]["up4"] = 0.977875;
    dataMap["130"]["up0"] = 0.5;
    dataMap["130"]["up1"] = 0.640454545454545;
    dataMap["130"]["up2"] = 0.858333333333333;
    dataMap["130"]["up3"] = 0.944642857142857;
    dataMap["130"]["up4"] = 0.97825;
    dataMap["131"]["up0"] = 0.5;
    dataMap["131"]["up1"] = 0.641136363636364;
    dataMap["131"]["up2"] = 0.859166666666667;
    dataMap["131"]["up3"] = 0.945535714285714;
    dataMap["131"]["up4"] = 0.978625;
    dataMap["132"]["up0"] = 0.5;
    dataMap["132"]["up1"] = 0.641818181818182;
    dataMap["132"]["up2"] = 0.86;
    dataMap["132"]["up3"] = 0.946428571428571;
    dataMap["132"]["up4"] = 0.979;
    dataMap["133"]["up0"] = 0.5;
    dataMap["133"]["up1"] = 0.6425;
    dataMap["133"]["up2"] = 0.860833333333333;
    dataMap["133"]["up3"] = 0.947321428571429;
    dataMap["133"]["up4"] = 0.979375;
    dataMap["134"]["up0"] = 0.5;
    dataMap["134"]["up1"] = 0.643181818181818;
    dataMap["134"]["up2"] = 0.861666666666667;
    dataMap["134"]["up3"] = 0.948214285714286;
    dataMap["134"]["up4"] = 0.97975;
    dataMap["135"]["up0"] = 0.5;
    dataMap["135"]["up1"] = 0.643863636363636;
    dataMap["135"]["up2"] = 0.8625;
    dataMap["135"]["up3"] = 0.949107142857143;
    dataMap["135"]["up4"] = 0.980125;
    dataMap["136"]["up0"] = 0.5;
    dataMap["136"]["up1"] = 0.644545454545455;
    dataMap["136"]["up2"] = 0.863333333333333;
    dataMap["136"]["up3"] = 0.95;
    dataMap["136"]["up4"] = 0.9805;
    dataMap["137"]["up0"] = 0.5;
    dataMap["137"]["up1"] = 0.645227272727273;
    dataMap["137"]["up2"] = 0.864166666666667;
    dataMap["137"]["up3"] = 0.950625;
    dataMap["137"]["up4"] = 0.980875;
    dataMap["138"]["up0"] = 0.5;
    dataMap["138"]["up1"] = 0.645909090909091;
    dataMap["138"]["up2"] = 0.865;
    dataMap["138"]["up3"] = 0.95125;
    dataMap["138"]["up4"] = 0.98125;
    dataMap["139"]["up0"] = 0.5;
    dataMap["139"]["up1"] = 0.646590909090909;
    dataMap["139"]["up2"] = 0.865833333333333;
    dataMap["139"]["up3"] = 0.951875;
    dataMap["139"]["up4"] = 0.981625;
    dataMap["140"]["up0"] = 0.5;
    dataMap["140"]["up1"] = 0.647272727272727;
    dataMap["140"]["up2"] = 0.866666666666667;
    dataMap["140"]["up3"] = 0.9525;
    dataMap["140"]["up4"] = 0.982;
    dataMap["141"]["up0"] = 0.5;
    dataMap["141"]["up1"] = 0.647954545454545;
    dataMap["141"]["up2"] = 0.8675;
    dataMap["141"]["up3"] = 0.953125;
    dataMap["141"]["up4"] = 0.982375;
    dataMap["142"]["up0"] = 0.5;
    dataMap["142"]["up1"] = 0.648636363636364;
    dataMap["142"]["up2"] = 0.868333333333333;
    dataMap["142"]["up3"] = 0.95375;
    dataMap["142"]["up4"] = 0.98275;
    dataMap["143"]["up0"] = 0.5;
    dataMap["143"]["up1"] = 0.649318181818182;
    dataMap["143"]["up2"] = 0.869166666666667;
    dataMap["143"]["up3"] = 0.954375;
    dataMap["143"]["up4"] = 0.983125;
    dataMap["144"]["up0"] = 0.5;
    dataMap["144"]["up1"] = 0.65;
    dataMap["144"]["up2"] = 0.87;
    dataMap["144"]["up3"] = 0.955;
    dataMap["144"]["up4"] = 0.9835;
    dataMap["145"]["up0"] = 0.5;
    dataMap["145"]["up1"] = 0.65125;
    dataMap["145"]["up2"] = 0.870833333333333;
    dataMap["145"]["up3"] = 0.955625;
    dataMap["145"]["up4"] = 0.983875;
    dataMap["146"]["up0"] = 0.5;
    dataMap["146"]["up1"] = 0.6525;
    dataMap["146"]["up2"] = 0.871666666666667;
    dataMap["146"]["up3"] = 0.95625;
    dataMap["146"]["up4"] = 0.98425;
    dataMap["147"]["up0"] = 0.5;
    dataMap["147"]["up1"] = 0.65375;
    dataMap["147"]["up2"] = 0.8725;
    dataMap["147"]["up3"] = 0.956875;
    dataMap["147"]["up4"] = 0.984625;
    dataMap["148"]["up0"] = 0.5;
    dataMap["148"]["up1"] = 0.655;
    dataMap["148"]["up2"] = 0.873333333333333;
    dataMap["148"]["up3"] = 0.9575;
    dataMap["148"]["up4"] = 0.985;
    dataMap["149"]["up0"] = 0.5;
    dataMap["149"]["up1"] = 0.65625;
    dataMap["149"]["up2"] = 0.874166666666667;
    dataMap["149"]["up3"] = 0.958125;
    dataMap["149"]["up4"] = 0.985375;
    dataMap["150"]["up0"] = 0.5;
    dataMap["150"]["up1"] = 0.6575;
    dataMap["150"]["up2"] = 0.875;
    dataMap["150"]["up3"] = 0.95875;
    dataMap["150"]["up4"] = 0.98575;
    dataMap["151"]["up0"] = 0.5;
    dataMap["151"]["up1"] = 0.65875;
    dataMap["151"]["up2"] = 0.875833333333333;
    dataMap["151"]["up3"] = 0.959375;
    dataMap["151"]["up4"] = 0.986125;
    dataMap["152"]["up0"] = 0.5;
    dataMap["152"]["up1"] = 0.66;
    dataMap["152"]["up2"] = 0.876666666666667;
    dataMap["152"]["up3"] = 0.96;
    dataMap["152"]["up4"] = 0.9865;
    dataMap["153"]["up0"] = 0.5;
    dataMap["153"]["up1"] = 0.66125;
    dataMap["153"]["up2"] = 0.8775;
    dataMap["153"]["up3"] = 0.960625;
    dataMap["153"]["up4"] = 0.986875;
    dataMap["154"]["up0"] = 0.5;
    dataMap["154"]["up1"] = 0.6625;
    dataMap["154"]["up2"] = 0.878333333333333;
    dataMap["154"]["up3"] = 0.96125;
    dataMap["154"]["up4"] = 0.98725;
    dataMap["155"]["up0"] = 0.5;
    dataMap["155"]["up1"] = 0.66375;
    dataMap["155"]["up2"] = 0.879166666666667;
    dataMap["155"]["up3"] = 0.961875;
    dataMap["155"]["up4"] = 0.987625;
    dataMap["156"]["up0"] = 0.5;
    dataMap["156"]["up1"] = 0.665;
    dataMap["156"]["up2"] = 0.88;
    dataMap["156"]["up3"] = 0.9625;
    dataMap["156"]["up4"] = 0.988;
    dataMap["157"]["up0"] = 0.5;
    dataMap["157"]["up1"] = 0.66625;
    dataMap["157"]["up2"] = 0.880833333333333;
    dataMap["157"]["up3"] = 0.963125;
    dataMap["157"]["up4"] = 0.988375;
    dataMap["158"]["up0"] = 0.5;
    dataMap["158"]["up1"] = 0.6675;
    dataMap["158"]["up2"] = 0.881666666666667;
    dataMap["158"]["up3"] = 0.96375;
    dataMap["158"]["up4"] = 0.98875;
    dataMap["159"]["up0"] = 0.5;
    dataMap["159"]["up1"] = 0.66875;
    dataMap["159"]["up2"] = 0.8825;
    dataMap["159"]["up3"] = 0.964375;
    dataMap["159"]["up4"] = 0.989125;
    dataMap["160"]["up0"] = 0.5;
    dataMap["160"]["up1"] = 0.67;
    dataMap["160"]["up2"] = 0.883333333333333;
    dataMap["160"]["up3"] = 0.965;
    dataMap["160"]["up4"] = 0.9895;
    dataMap["161"]["up0"] = 0.5;
    dataMap["161"]["up1"] = 0.67125;
    dataMap["161"]["up2"] = 0.884166666666667;
    dataMap["161"]["up3"] = 0.965625;
    dataMap["161"]["up4"] = 0.989875;
    dataMap["162"]["up0"] = 0.5;
    dataMap["162"]["up1"] = 0.6725;
    dataMap["162"]["up2"] = 0.885;
    dataMap["162"]["up3"] = 0.96625;
    dataMap["162"]["up4"] = 0.99025;
    dataMap["163"]["up0"] = 0.5;
    dataMap["163"]["up1"] = 0.67375;
    dataMap["163"]["up2"] = 0.885833333333333;
    dataMap["163"]["up3"] = 0.966875;
    dataMap["163"]["up4"] = 0.990625;
    dataMap["164"]["up0"] = 0.5;
    dataMap["164"]["up1"] = 0.675;
    dataMap["164"]["up2"] = 0.886666666666667;
    dataMap["164"]["up3"] = 0.9675;
    dataMap["164"]["up4"] = 0.991;
    dataMap["165"]["up0"] = 0.5;
    dataMap["165"]["up1"] = 0.67625;
    dataMap["165"]["up2"] = 0.8875;
    dataMap["165"]["up3"] = 0.968125;
    dataMap["165"]["up4"] = 0.991375;
    dataMap["166"]["up0"] = 0.5;
    dataMap["166"]["up1"] = 0.6775;
    dataMap["166"]["up2"] = 0.888333333333333;
    dataMap["166"]["up3"] = 0.96875;
    dataMap["166"]["up4"] = 0.99175;
    dataMap["167"]["up0"] = 0.5;
    dataMap["167"]["up1"] = 0.67875;
    dataMap["167"]["up2"] = 0.889166666666667;
    dataMap["167"]["up3"] = 0.969375;
    dataMap["167"]["up4"] = 0.992125;
    dataMap["168"]["up0"] = 0.5;
    dataMap["168"]["up1"] = 0.68;
    dataMap["168"]["up2"] = 0.89;
    dataMap["168"]["up3"] = 0.97;
    dataMap["168"]["up4"] = 0.9925;
    dataMap["169"]["up0"] = 0.5;
    dataMap["169"]["up1"] = 0.68125;
    dataMap["169"]["up2"] = 0.890833333333333;
    dataMap["169"]["up3"] = 0.970625;
    dataMap["169"]["up4"] = 0.992875;
    dataMap["170"]["up0"] = 0.5;
    dataMap["170"]["up1"] = 0.6825;
    dataMap["170"]["up2"] = 0.891666666666667;
    dataMap["170"]["up3"] = 0.97125;
    dataMap["170"]["up4"] = 0.99325;
    dataMap["171"]["up0"] = 0.5;
    dataMap["171"]["up1"] = 0.68375;
    dataMap["171"]["up2"] = 0.8925;
    dataMap["171"]["up3"] = 0.971875;
    dataMap["171"]["up4"] = 0.993625;
    dataMap["172"]["up0"] = 0.5;
    dataMap["172"]["up1"] = 0.685;
    dataMap["172"]["up2"] = 0.893333333333333;
    dataMap["172"]["up3"] = 0.9725;
    dataMap["172"]["up4"] = 0.994;
    dataMap["173"]["up0"] = 0.5;
    dataMap["173"]["up1"] = 0.68625;
    dataMap["173"]["up2"] = 0.894166666666667;
    dataMap["173"]["up3"] = 0.973125;
    dataMap["173"]["up4"] = 0.994375;
    dataMap["174"]["up0"] = 0.5;
    dataMap["174"]["up1"] = 0.6875;
    dataMap["174"]["up2"] = 0.895;
    dataMap["174"]["up3"] = 0.97375;
    dataMap["174"]["up4"] = 0.99475;
    dataMap["175"]["up0"] = 0.5;
    dataMap["175"]["up1"] = 0.68875;
    dataMap["175"]["up2"] = 0.895833333333333;
    dataMap["175"]["up3"] = 0.974375;
    dataMap["175"]["up4"] = 0.995125;
    dataMap["176"]["up0"] = 0.5;
    dataMap["176"]["up1"] = 0.69;
    dataMap["176"]["up2"] = 0.896666666666667;
    dataMap["176"]["up3"] = 0.975;
    dataMap["176"]["up4"] = 0.9955;
    dataMap["177"]["up0"] = 0.5;
    dataMap["177"]["up1"] = 0.69125;
    dataMap["177"]["up2"] = 0.8975;
    dataMap["177"]["up3"] = 0.975625;
    dataMap["177"]["up4"] = 0.995875;
    dataMap["178"]["up0"] = 0.5;
    dataMap["178"]["up1"] = 0.6925;
    dataMap["178"]["up2"] = 0.898333333333333;
    dataMap["178"]["up3"] = 0.97625;
    dataMap["178"]["up4"] = 0.99625;
    dataMap["179"]["up0"] = 0.5;
    dataMap["179"]["up1"] = 0.69375;
    dataMap["179"]["up2"] = 0.899166666666667;
    dataMap["179"]["up3"] = 0.976875;
    dataMap["179"]["up4"] = 0.996625;
    dataMap["180"]["up0"] = 0.5;
    dataMap["180"]["up1"] = 0.695;
    dataMap["180"]["up2"] = 0.9;
    dataMap["180"]["up3"] = 0.9775;
    dataMap["180"]["up4"] = 0.997;
    dataMap["181"]["up0"] = 0.5;
    dataMap["181"]["up1"] = 0.69625;
    dataMap["181"]["up2"] = 0.900833333333333;
    dataMap["181"]["up3"] = 0.978125;
    dataMap["181"]["up4"] = 0.997375;
    dataMap["182"]["up0"] = 0.5;
    dataMap["182"]["up1"] = 0.6975;
    dataMap["182"]["up2"] = 0.901666666666667;
    dataMap["182"]["up3"] = 0.97875;
    dataMap["182"]["up4"] = 0.99775;
    dataMap["183"]["up0"] = 0.5;
    dataMap["183"]["up1"] = 0.69875;
    dataMap["183"]["up2"] = 0.9025;
    dataMap["183"]["up3"] = 0.979375;
    dataMap["183"]["up4"] = 0.998125;
    dataMap["184"]["up0"] = 0.5;
    dataMap["184"]["up1"] = 0.7;
    dataMap["184"]["up2"] = 0.903333333333333;
    dataMap["184"]["up3"] = 0.98;
    dataMap["184"]["up4"] = 0.9985;
    dataMap["185"]["up0"] = 0.5;
    dataMap["185"]["up1"] = 0.701785714285714;
    dataMap["185"]["up2"] = 0.904166666666667;
    dataMap["185"]["up3"] = 0.980625;
    dataMap["185"]["up4"] = 0.998875;
    dataMap["186"]["up0"] = 0.5;
    dataMap["186"]["up1"] = 0.703571428571429;
    dataMap["186"]["up2"] = 0.905;
    dataMap["186"]["up3"] = 0.98125;
    dataMap["186"]["up4"] = 0.99925;
    dataMap["187"]["up0"] = 0.5;
    dataMap["187"]["up1"] = 0.705357142857143;
    dataMap["187"]["up2"] = 0.905833333333333;
    dataMap["187"]["up3"] = 0.981875;
    dataMap["187"]["up4"] = 0.999625;
    dataMap["188"]["up0"] = 0.5;
    dataMap["188"]["up1"] = 0.707142857142857;
    dataMap["188"]["up2"] = 0.906666666666667;
    dataMap["188"]["up3"] = 0.9825;
    dataMap["188"]["up4"] = 1;
    dataMap["189"]["up0"] = 0.5;
    dataMap["189"]["up1"] = 0.708928571428571;
    dataMap["189"]["up2"] = 0.9075;
    dataMap["189"]["up3"] = 0.983125;
    dataMap["189"]["up4"] = 1;
    dataMap["190"]["up0"] = 0.5;
    dataMap["190"]["up1"] = 0.710714285714286;
    dataMap["190"]["up2"] = 0.908333333333333;
    dataMap["190"]["up3"] = 0.98375;
    dataMap["190"]["up4"] = 1;
    dataMap["191"]["up0"] = 0.5;
    dataMap["191"]["up1"] = 0.7125;
    dataMap["191"]["up2"] = 0.909166666666667;
    dataMap["191"]["up3"] = 0.984375;
    dataMap["191"]["up4"] = 1;
    dataMap["192"]["up0"] = 0.5;
    dataMap["192"]["up1"] = 0.714285714285714;
    dataMap["192"]["up2"] = 0.91;
    dataMap["192"]["up3"] = 0.985;
    dataMap["192"]["up4"] = 1;
    dataMap["193"]["up0"] = 0.5;
    dataMap["193"]["up1"] = 0.716071428571429;
    dataMap["193"]["up2"] = 0.910833333333333;
    dataMap["193"]["up3"] = 0.985625;
    dataMap["193"]["up4"] = 1;
    dataMap["194"]["up0"] = 0.5;
    dataMap["194"]["up1"] = 0.717857142857143;
    dataMap["194"]["up2"] = 0.911666666666667;
    dataMap["194"]["up3"] = 0.98625;
    dataMap["194"]["up4"] = 1;
    dataMap["195"]["up0"] = 0.5;
    dataMap["195"]["up1"] = 0.719642857142857;
    dataMap["195"]["up2"] = 0.9125;
    dataMap["195"]["up3"] = 0.986875;
    dataMap["195"]["up4"] = 1;
    dataMap["196"]["up0"] = 0.5;
    dataMap["196"]["up1"] = 0.721428571428571;
    dataMap["196"]["up2"] = 0.913333333333333;
    dataMap["196"]["up3"] = 0.9875;
    dataMap["196"]["up4"] = 1;
    dataMap["197"]["up0"] = 0.5;
    dataMap["197"]["up1"] = 0.723214285714286;
    dataMap["197"]["up2"] = 0.914166666666667;
    dataMap["197"]["up3"] = 0.988125;
    dataMap["197"]["up4"] = 1;
    dataMap["198"]["up0"] = 0.5;
    dataMap["198"]["up1"] = 0.725;
    dataMap["198"]["up2"] = 0.915;
    dataMap["198"]["up3"] = 0.98875;
    dataMap["198"]["up4"] = 1;
    dataMap["199"]["up0"] = 0.5;
    dataMap["199"]["up1"] = 0.726785714285714;
    dataMap["199"]["up2"] = 0.915833333333333;
    dataMap["199"]["up3"] = 0.989375;
    dataMap["199"]["up4"] = 1;
    dataMap["200"]["up0"] = 0.5;
    dataMap["200"]["up1"] = 0.728571428571429;
    dataMap["200"]["up2"] = 0.916666666666667;
    dataMap["200"]["up3"] = 0.99;
    dataMap["200"]["up4"] = 1;
    dataMap["201"]["up0"] = 0.5;
    dataMap["201"]["up1"] = 0.730357142857143;
    dataMap["201"]["up2"] = 0.9175;
    dataMap["201"]["up3"] = 0.990625;
    dataMap["201"]["up4"] = 1;
    dataMap["202"]["up0"] = 0.5;
    dataMap["202"]["up1"] = 0.732142857142857;
    dataMap["202"]["up2"] = 0.918333333333333;
    dataMap["202"]["up3"] = 0.99125;
    dataMap["202"]["up4"] = 1;
    dataMap["203"]["up0"] = 0.5;
    dataMap["203"]["up1"] = 0.733928571428571;
    dataMap["203"]["up2"] = 0.919166666666667;
    dataMap["203"]["up3"] = 0.991875;
    dataMap["203"]["up4"] = 1;
    dataMap["204"]["up0"] = 0.5;
    dataMap["204"]["up1"] = 0.735714285714286;
    dataMap["204"]["up2"] = 0.92;
    dataMap["204"]["up3"] = 0.9925;
    dataMap["204"]["up4"] = 1;
    dataMap["205"]["up0"] = 0.5;
    dataMap["205"]["up1"] = 0.7375;
    dataMap["205"]["up2"] = 0.920833333333334;
    dataMap["205"]["up3"] = 0.993125;
    dataMap["205"]["up4"] = 1;
    dataMap["206"]["up0"] = 0.5;
    dataMap["206"]["up1"] = 0.739285714285714;
    dataMap["206"]["up2"] = 0.921666666666667;
    dataMap["206"]["up3"] = 0.99375;
    dataMap["206"]["up4"] = 1;
    dataMap["207"]["up0"] = 0.5;
    dataMap["207"]["up1"] = 0.741071428571429;
    dataMap["207"]["up2"] = 0.9225;
    dataMap["207"]["up3"] = 0.994375;
    dataMap["207"]["up4"] = 1;
    dataMap["208"]["up0"] = 0.5;
    dataMap["208"]["up1"] = 0.742857142857143;
    dataMap["208"]["up2"] = 0.923333333333333;
    dataMap["208"]["up3"] = 0.995;
    dataMap["208"]["up4"] = 1;
    dataMap["209"]["up0"] = 0.5;
    dataMap["209"]["up1"] = 0.744642857142857;
    dataMap["209"]["up2"] = 0.924166666666667;
    dataMap["209"]["up3"] = 0.995625;
    dataMap["209"]["up4"] = 1;
    dataMap["210"]["up0"] = 0.5;
    dataMap["210"]["up1"] = 0.746428571428571;
    dataMap["210"]["up2"] = 0.925;
    dataMap["210"]["up3"] = 0.99625;
    dataMap["210"]["up4"] = 1;
    dataMap["211"]["up0"] = 0.5;
    dataMap["211"]["up1"] = 0.748214285714286;
    dataMap["211"]["up2"] = 0.925833333333334;
    dataMap["211"]["up3"] = 0.996875;
    dataMap["211"]["up4"] = 1;
    dataMap["212"]["up0"] = 0.5;
    dataMap["212"]["up1"] = 0.75;
    dataMap["212"]["up2"] = 0.926666666666667;
    dataMap["212"]["up3"] = 0.9975;
    dataMap["212"]["up4"] = 1;
    dataMap["213"]["up0"] = 0.5;
    dataMap["213"]["up1"] = 0.7525;
    dataMap["213"]["up2"] = 0.9275;
    dataMap["213"]["up3"] = 0.998125;
    dataMap["213"]["up4"] = 1;
    dataMap["214"]["up0"] = 0.5;
    dataMap["214"]["up1"] = 0.755;
    dataMap["214"]["up2"] = 0.928333333333333;
    dataMap["214"]["up3"] = 0.99875;
    dataMap["214"]["up4"] = 1;
    dataMap["215"]["up0"] = 0.5;
    dataMap["215"]["up1"] = 0.7575;
    dataMap["215"]["up2"] = 0.929166666666667;
    dataMap["215"]["up3"] = 0.999375;
    dataMap["215"]["up4"] = 1;
    dataMap["216"]["up0"] = 0.5;
    dataMap["216"]["up1"] = 0.76;
    dataMap["216"]["up2"] = 0.93;
    dataMap["216"]["up3"] = 1;
    dataMap["216"]["up4"] = 1;
    dataMap["217"]["up0"] = 0.5;
    dataMap["217"]["up1"] = 0.7625;
    dataMap["217"]["up2"] = 0.930833333333334;
    dataMap["217"]["up3"] = 1;
    dataMap["217"]["up4"] = 1;
    dataMap["218"]["up0"] = 0.5;
    dataMap["218"]["up1"] = 0.765;
    dataMap["218"]["up2"] = 0.931666666666667;
    dataMap["218"]["up3"] = 1;
    dataMap["218"]["up4"] = 1;
    dataMap["219"]["up0"] = 0.5;
    dataMap["219"]["up1"] = 0.7675;
    dataMap["219"]["up2"] = 0.9325;
    dataMap["219"]["up3"] = 1;
    dataMap["219"]["up4"] = 1;
    dataMap["220"]["up0"] = 0.5;
    dataMap["220"]["up1"] = 0.77;
    dataMap["220"]["up2"] = 0.933333333333333;
    dataMap["220"]["up3"] = 1;
    dataMap["220"]["up4"] = 1;
    dataMap["221"]["up0"] = 0.5;
    dataMap["221"]["up1"] = 0.7725;
    dataMap["221"]["up2"] = 0.934166666666667;
    dataMap["221"]["up3"] = 1;
    dataMap["221"]["up4"] = 1;
    dataMap["222"]["up0"] = 0.5;
    dataMap["222"]["up1"] = 0.775;
    dataMap["222"]["up2"] = 0.935;
    dataMap["222"]["up3"] = 1;
    dataMap["222"]["up4"] = 1;
    dataMap["223"]["up0"] = 0.5;
    dataMap["223"]["up1"] = 0.7775;
    dataMap["223"]["up2"] = 0.935833333333334;
    dataMap["223"]["up3"] = 1;
    dataMap["223"]["up4"] = 1;
    dataMap["224"]["up0"] = 0.5;
    dataMap["224"]["up1"] = 0.78;
    dataMap["224"]["up2"] = 0.936666666666667;
    dataMap["224"]["up3"] = 1;
    dataMap["224"]["up4"] = 1;
    dataMap["225"]["up0"] = 0.5;
    dataMap["225"]["up1"] = 0.7825;
    dataMap["225"]["up2"] = 0.9375;
    dataMap["225"]["up3"] = 1;
    dataMap["225"]["up4"] = 1;
    dataMap["226"]["up0"] = 0.5;
    dataMap["226"]["up1"] = 0.785;
    dataMap["226"]["up2"] = 0.938333333333333;
    dataMap["226"]["up3"] = 1;
    dataMap["226"]["up4"] = 1;
    dataMap["227"]["up0"] = 0.5;
    dataMap["227"]["up1"] = 0.7875;
    dataMap["227"]["up2"] = 0.939166666666667;
    dataMap["227"]["up3"] = 1;
    dataMap["227"]["up4"] = 1;
    dataMap["228"]["up0"] = 0.5;
    dataMap["228"]["up1"] = 0.79;
    dataMap["228"]["up2"] = 0.94;
    dataMap["228"]["up3"] = 1;
    dataMap["228"]["up4"] = 1;
    dataMap["229"]["up0"] = 0.5;
    dataMap["229"]["up1"] = 0.7925;
    dataMap["229"]["up2"] = 0.940833333333334;
    dataMap["229"]["up3"] = 1;
    dataMap["229"]["up4"] = 1;
    dataMap["230"]["up0"] = 0.5;
    dataMap["230"]["up1"] = 0.795;
    dataMap["230"]["up2"] = 0.941666666666667;
    dataMap["230"]["up3"] = 1;
    dataMap["230"]["up4"] = 1;
    dataMap["231"]["up0"] = 0.5;
    dataMap["231"]["up1"] = 0.7975;
    dataMap["231"]["up2"] = 0.9425;
    dataMap["231"]["up3"] = 1;
    dataMap["231"]["up4"] = 1;
    dataMap["232"]["up0"] = 0.5;
    dataMap["232"]["up1"] = 0.8;
    dataMap["232"]["up2"] = 0.943333333333333;
    dataMap["232"]["up3"] = 1;
    dataMap["232"]["up4"] = 1;
    dataMap["233"]["up0"] = 0.5;
    dataMap["233"]["up1"] = 0.8025;
    dataMap["233"]["up2"] = 0.944166666666667;
    dataMap["233"]["up3"] = 1;
    dataMap["233"]["up4"] = 1;
    dataMap["234"]["up0"] = 0.5;
    dataMap["234"]["up1"] = 0.805;
    dataMap["234"]["up2"] = 0.945;
    dataMap["234"]["up3"] = 1;
    dataMap["234"]["up4"] = 1;
    dataMap["235"]["up0"] = 0.5;
    dataMap["235"]["up1"] = 0.8075;
    dataMap["235"]["up2"] = 0.945833333333334;
    dataMap["235"]["up3"] = 1;
    dataMap["235"]["up4"] = 1;
    dataMap["236"]["up0"] = 0.5;
    dataMap["236"]["up1"] = 0.81;
    dataMap["236"]["up2"] = 0.946666666666667;
    dataMap["236"]["up3"] = 1;
    dataMap["236"]["up4"] = 1;
    dataMap["237"]["up0"] = 0.5;
    dataMap["237"]["up1"] = 0.8125;
    dataMap["237"]["up2"] = 0.9475;
    dataMap["237"]["up3"] = 1;
    dataMap["237"]["up4"] = 1;
    dataMap["238"]["up0"] = 0.5;
    dataMap["238"]["up1"] = 0.815;
    dataMap["238"]["up2"] = 0.948333333333333;
    dataMap["238"]["up3"] = 1;
    dataMap["238"]["up4"] = 1;
    dataMap["239"]["up0"] = 0.5;
    dataMap["239"]["up1"] = 0.8175;
    dataMap["239"]["up2"] = 0.949166666666667;
    dataMap["239"]["up3"] = 1;
    dataMap["239"]["up4"] = 1;
    dataMap["240"]["up0"] = 0.5;
    dataMap["240"]["up1"] = 0.82;
    dataMap["240"]["up2"] = 0.95;
    dataMap["240"]["up3"] = 1;
    dataMap["240"]["up4"] = 1;
    dataMap["241"]["up0"] = 0.5;
    dataMap["241"]["up1"] = 0.8225;
    dataMap["241"]["up2"] = 0.950833333333334;
    dataMap["241"]["up3"] = 1;
    dataMap["241"]["up4"] = 1;
    dataMap["242"]["up0"] = 0.5;
    dataMap["242"]["up1"] = 0.825;
    dataMap["242"]["up2"] = 0.951666666666667;
    dataMap["242"]["up3"] = 1;
    dataMap["242"]["up4"] = 1;
    dataMap["243"]["up0"] = 0.5;
    dataMap["243"]["up1"] = 0.8275;
    dataMap["243"]["up2"] = 0.9525;
    dataMap["243"]["up3"] = 1;
    dataMap["243"]["up4"] = 1;
    dataMap["244"]["up0"] = 0.5;
    dataMap["244"]["up1"] = 0.83;
    dataMap["244"]["up2"] = 0.953333333333333;
    dataMap["244"]["up3"] = 1;
    dataMap["244"]["up4"] = 1;
    dataMap["245"]["up0"] = 0.5;
    dataMap["245"]["up1"] = 0.8325;
    dataMap["245"]["up2"] = 0.954166666666667;
    dataMap["245"]["up3"] = 1;
    dataMap["245"]["up4"] = 1;
    dataMap["246"]["up0"] = 0.5;
    dataMap["246"]["up1"] = 0.835;
    dataMap["246"]["up2"] = 0.955;
    dataMap["246"]["up3"] = 1;
    dataMap["246"]["up4"] = 1;
    dataMap["247"]["up0"] = 0.5;
    dataMap["247"]["up1"] = 0.8375;
    dataMap["247"]["up2"] = 0.955833333333334;
    dataMap["247"]["up3"] = 1;
    dataMap["247"]["up4"] = 1;
    dataMap["248"]["up0"] = 0.5;
    dataMap["248"]["up1"] = 0.84;
    dataMap["248"]["up2"] = 0.956666666666667;
    dataMap["248"]["up3"] = 1;
    dataMap["248"]["up4"] = 1;
    dataMap["249"]["up0"] = 0.5;
    dataMap["249"]["up1"] = 0.8425;
    dataMap["249"]["up2"] = 0.9575;
    dataMap["249"]["up3"] = 1;
    dataMap["249"]["up4"] = 1;
    dataMap["250"]["up0"] = 0.5;
    dataMap["250"]["up1"] = 0.845;
    dataMap["250"]["up2"] = 0.958333333333333;
    dataMap["250"]["up3"] = 1;
    dataMap["250"]["up4"] = 1;
    dataMap["251"]["up0"] = 0.5;
    dataMap["251"]["up1"] = 0.8475;
    dataMap["251"]["up2"] = 0.959166666666667;
    dataMap["251"]["up3"] = 1;
    dataMap["251"]["up4"] = 1;
    dataMap["252"]["up0"] = 0.5;
    dataMap["252"]["up1"] = 0.85;
    dataMap["252"]["up2"] = 0.96;
    dataMap["252"]["up3"] = 1;
    dataMap["252"]["up4"] = 1;
    dataMap["253"]["up0"] = 0.5;
    dataMap["253"]["up1"] = 0.853125;
    dataMap["253"]["up2"] = 0.960833333333334;
    dataMap["253"]["up3"] = 1;
    dataMap["253"]["up4"] = 1;
    dataMap["254"]["up0"] = 0.5;
    dataMap["254"]["up1"] = 0.85625;
    dataMap["254"]["up2"] = 0.961666666666667;
    dataMap["254"]["up3"] = 1;
    dataMap["254"]["up4"] = 1;
    dataMap["255"]["up0"] = 0.5;
    dataMap["255"]["up1"] = 0.859375;
    dataMap["255"]["up2"] = 0.9625;
    dataMap["255"]["up3"] = 1;
    dataMap["255"]["up4"] = 1;
    dataMap["256"]["up0"] = 0.5;
    dataMap["256"]["up1"] = 0.8625;
    dataMap["256"]["up2"] = 0.963333333333333;
    dataMap["256"]["up3"] = 1;
    dataMap["256"]["up4"] = 1;
    dataMap["257"]["up0"] = 0.5;
    dataMap["257"]["up1"] = 0.865625;
    dataMap["257"]["up2"] = 0.964166666666667;
    dataMap["257"]["up3"] = 1;
    dataMap["257"]["up4"] = 1;
    dataMap["258"]["up0"] = 0.5;
    dataMap["258"]["up1"] = 0.86875;
    dataMap["258"]["up2"] = 0.965;
    dataMap["258"]["up3"] = 1;
    dataMap["258"]["up4"] = 1;
    dataMap["259"]["up0"] = 0.5;
    dataMap["259"]["up1"] = 0.871875;
    dataMap["259"]["up2"] = 0.965833333333334;
    dataMap["259"]["up3"] = 1;
    dataMap["259"]["up4"] = 1;
    dataMap["260"]["up0"] = 0.5;
    dataMap["260"]["up1"] = 0.875;
    dataMap["260"]["up2"] = 0.966666666666667;
    dataMap["260"]["up3"] = 1;
    dataMap["260"]["up4"] = 1;
    dataMap["261"]["up0"] = 0.5;
    dataMap["261"]["up1"] = 0.878125;
    dataMap["261"]["up2"] = 0.9675;
    dataMap["261"]["up3"] = 1;
    dataMap["261"]["up4"] = 1;
    dataMap["262"]["up0"] = 0.5;
    dataMap["262"]["up1"] = 0.88125;
    dataMap["262"]["up2"] = 0.968333333333333;
    dataMap["262"]["up3"] = 1;
    dataMap["262"]["up4"] = 1;
    dataMap["263"]["up0"] = 0.5;
    dataMap["263"]["up1"] = 0.884375;
    dataMap["263"]["up2"] = 0.969166666666667;
    dataMap["263"]["up3"] = 1;
    dataMap["263"]["up4"] = 1;
    dataMap["264"]["up0"] = 0.5;
    dataMap["264"]["up1"] = 0.8875;
    dataMap["264"]["up2"] = 0.97;
    dataMap["264"]["up3"] = 1;
    dataMap["264"]["up4"] = 1;
    dataMap["265"]["up0"] = 0.5;
    dataMap["265"]["up1"] = 0.890625;
    dataMap["265"]["up2"] = 0.970833333333334;
    dataMap["265"]["up3"] = 1;
    dataMap["265"]["up4"] = 1;
    dataMap["266"]["up0"] = 0.5;
    dataMap["266"]["up1"] = 0.89375;
    dataMap["266"]["up2"] = 0.971666666666667;
    dataMap["266"]["up3"] = 1;
    dataMap["266"]["up4"] = 1;
    dataMap["267"]["up0"] = 0.5;
    dataMap["267"]["up1"] = 0.896875;
    dataMap["267"]["up2"] = 0.9725;
    dataMap["267"]["up3"] = 1;
    dataMap["267"]["up4"] = 1;
    dataMap["268"]["up0"] = 0.5;
    dataMap["268"]["up1"] = 0.9;
    dataMap["268"]["up2"] = 0.973333333333333;
    dataMap["268"]["up3"] = 1;
    dataMap["268"]["up4"] = 1;
    dataMap["269"]["up0"] = 0.5;
    dataMap["269"]["up1"] = 0.903125;
    dataMap["269"]["up2"] = 0.974166666666667;
    dataMap["269"]["up3"] = 1;
    dataMap["269"]["up4"] = 1;
    dataMap["270"]["up0"] = 0.5;
    dataMap["270"]["up1"] = 0.90625;
    dataMap["270"]["up2"] = 0.975;
    dataMap["270"]["up3"] = 1;
    dataMap["270"]["up4"] = 1;
    dataMap["271"]["up0"] = 0.5;
    dataMap["271"]["up1"] = 0.909375;
    dataMap["271"]["up2"] = 0.975833333333334;
    dataMap["271"]["up3"] = 1;
    dataMap["271"]["up4"] = 1;
    dataMap["272"]["up0"] = 0.5;
    dataMap["272"]["up1"] = 0.9125;
    dataMap["272"]["up2"] = 0.976666666666667;
    dataMap["272"]["up3"] = 1;
    dataMap["272"]["up4"] = 1;
    dataMap["273"]["up0"] = 0.5;
    dataMap["273"]["up1"] = 0.915625;
    dataMap["273"]["up2"] = 0.9775;
    dataMap["273"]["up3"] = 1;
    dataMap["273"]["up4"] = 1;
    dataMap["274"]["up0"] = 0.5;
    dataMap["274"]["up1"] = 0.91875;
    dataMap["274"]["up2"] = 0.978333333333333;
    dataMap["274"]["up3"] = 1;
    dataMap["274"]["up4"] = 1;
    dataMap["275"]["up0"] = 0.5;
    dataMap["275"]["up1"] = 0.921875;
    dataMap["275"]["up2"] = 0.979166666666667;
    dataMap["275"]["up3"] = 1;
    dataMap["275"]["up4"] = 1;
    dataMap["276"]["up0"] = 0.5;
    dataMap["276"]["up1"] = 0.925;
    dataMap["276"]["up2"] = 0.98;
    dataMap["276"]["up3"] = 1;
    dataMap["276"]["up4"] = 1;
    dataMap["277"]["up0"] = 0.5;
    dataMap["277"]["up1"] = 0.928125;
    dataMap["277"]["up2"] = 0.980833333333334;
    dataMap["277"]["up3"] = 1;
    dataMap["277"]["up4"] = 1;
    dataMap["278"]["up0"] = 0.5;
    dataMap["278"]["up1"] = 0.93125;
    dataMap["278"]["up2"] = 0.981666666666667;
    dataMap["278"]["up3"] = 1;
    dataMap["278"]["up4"] = 1;
    dataMap["279"]["up0"] = 0.5;
    dataMap["279"]["up1"] = 0.934375;
    dataMap["279"]["up2"] = 0.9825;
    dataMap["279"]["up3"] = 1;
    dataMap["279"]["up4"] = 1;
    dataMap["280"]["up0"] = 0.5;
    dataMap["280"]["up1"] = 0.9375;
    dataMap["280"]["up2"] = 0.983333333333334;
    dataMap["280"]["up3"] = 1;
    dataMap["280"]["up4"] = 1;
    dataMap["281"]["up0"] = 0.5;
    dataMap["281"]["up1"] = 0.940625;
    dataMap["281"]["up2"] = 0.984166666666667;
    dataMap["281"]["up3"] = 1;
    dataMap["281"]["up4"] = 1;
    dataMap["282"]["up0"] = 0.5;
    dataMap["282"]["up1"] = 0.94375;
    dataMap["282"]["up2"] = 0.985;
    dataMap["282"]["up3"] = 1;
    dataMap["282"]["up4"] = 1;
    dataMap["283"]["up0"] = 0.5;
    dataMap["283"]["up1"] = 0.946875;
    dataMap["283"]["up2"] = 0.985833333333334;
    dataMap["283"]["up3"] = 1;
    dataMap["283"]["up4"] = 1;
    dataMap["284"]["up0"] = 0.5;
    dataMap["284"]["up1"] = 0.95;
    dataMap["284"]["up2"] = 0.986666666666667;
    dataMap["284"]["up3"] = 1;
    dataMap["284"]["up4"] = 1;
    dataMap["285"]["up0"] = 0.5;
    dataMap["285"]["up1"] = 0.953125;
    dataMap["285"]["up2"] = 0.9875;
    dataMap["285"]["up3"] = 1;
    dataMap["285"]["up4"] = 1;
    dataMap["286"]["up0"] = 0.5;
    dataMap["286"]["up1"] = 0.95625;
    dataMap["286"]["up2"] = 0.988333333333334;
    dataMap["286"]["up3"] = 1;
    dataMap["286"]["up4"] = 1;
    dataMap["287"]["up0"] = 0.5;
    dataMap["287"]["up1"] = 0.959375;
    dataMap["287"]["up2"] = 0.989166666666667;
    dataMap["287"]["up3"] = 1;
    dataMap["287"]["up4"] = 1;
    dataMap["288"]["up0"] = 0.5;
    dataMap["288"]["up1"] = 0.9625;
    dataMap["288"]["up2"] = 0.99;
    dataMap["288"]["up3"] = 1;
    dataMap["288"]["up4"] = 1;
    dataMap["289"]["up0"] = 0.5;
    dataMap["289"]["up1"] = 0.965625;
    dataMap["289"]["up2"] = 0.990833333333334;
    dataMap["289"]["up3"] = 1;
    dataMap["289"]["up4"] = 1;
    dataMap["290"]["up0"] = 0.5;
    dataMap["290"]["up1"] = 0.96875;
    dataMap["290"]["up2"] = 0.991666666666667;
    dataMap["290"]["up3"] = 1;
    dataMap["290"]["up4"] = 1;
    dataMap["291"]["up0"] = 0.5;
    dataMap["291"]["up1"] = 0.971875;
    dataMap["291"]["up2"] = 1;
    dataMap["291"]["up3"] = 1;
    dataMap["291"]["up4"] = 1;
    dataMap["292"]["up0"] = 0.5;
    dataMap["292"]["up1"] = 0.975;
    dataMap["292"]["up2"] = 1;
    dataMap["292"]["up3"] = 1;
    dataMap["292"]["up4"] = 1;
    dataMap["293"]["up0"] = 0.5;
    dataMap["293"]["up1"] = 0.978125;
    dataMap["293"]["up2"] = 1;
    dataMap["293"]["up3"] = 1;
    dataMap["293"]["up4"] = 1;
    dataMap["294"]["up0"] = 0.5;
    dataMap["294"]["up1"] = 0.98125;
    dataMap["294"]["up2"] = 1;
    dataMap["294"]["up3"] = 1;
    dataMap["294"]["up4"] = 1;
    dataMap["295"]["up0"] = 0.5;
    dataMap["295"]["up1"] = 0.984375;
    dataMap["295"]["up2"] = 1;
    dataMap["295"]["up3"] = 1;
    dataMap["295"]["up4"] = 1;
    dataMap["296"]["up0"] = 0.5;
    dataMap["296"]["up1"] = 0.9875;
    dataMap["296"]["up2"] = 1;
    dataMap["296"]["up3"] = 1;
    dataMap["296"]["up4"] = 1;
    dataMap["297"]["up0"] = 0.5;
    dataMap["297"]["up1"] = 0.990625;
    dataMap["297"]["up2"] = 1;
    dataMap["297"]["up3"] = 1;
    dataMap["297"]["up4"] = 1;
    dataMap["298"]["up0"] = 0.5;
    dataMap["298"]["up1"] = 0.99375;
    dataMap["298"]["up2"] = 1;
    dataMap["298"]["up3"] = 1;
    dataMap["298"]["up4"] = 1;
    dataMap["299"]["up0"] = 0.5;
    dataMap["299"]["up1"] = 0.996875;
    dataMap["299"]["up2"] = 1;
    dataMap["299"]["up3"] = 1;
    dataMap["299"]["up4"] = 1;
    dataMap["300"]["up0"] = 0.5;
    dataMap["300"]["up1"] = 1;
    dataMap["300"]["up2"] = 1;
    dataMap["300"]["up3"] = 1;
    dataMap["300"]["up4"] = 1;
    
    // Initialize AWS SDK
    Aws::SDKOptions options;
    Aws::InitAPI(options);
}


void Dashboard::log(std::string msg) {
    if (!cvarManager) return;
	cvarManager->log(msg);
}


void Dashboard::loadHooks() {

    gameWrapper->HookEvent("Function TAGame.GameEvent_TA.StartEvent",
          std::bind(&Dashboard::getGameData, this));
     gameWrapper->HookEvent("Function ProjectX.GRI_X.EventGameStarted",
         std::bind(&Dashboard::getGameData, this));
  //  gameWrapper->HookEvent("Function TAGame.GameEvent_TA.StartCountDown",
  //    std::bind(&Dashboard::getGameData, this));
  //  gameWrapper->HookEvent("Function ProjectX.OnlinePlayer_X.OnNewGame",
   //      std::bind(&Dashboard::getGameData, this));
    gameWrapper->HookEvent("Function GameEvent_Soccar_TA.Active.EndState",
         std::bind(&Dashboard::isGamePaused, this));
    gameWrapper->HookEvent("Function TAGame.GameEvent_TA.StartEvent",
          std::bind(&Dashboard::isGamePlaying, this));
     gameWrapper->HookEvent("Function ProjectX.GRI_X.EventGameStarted",
         std::bind(&Dashboard::isGamePlaying, this));
    gameWrapper->HookEvent("Function TAGame.GameEvent_TA.StartCountDown",
      std::bind(&Dashboard::isGamePlaying, this));
   // gameWrapper->HookEvent("Function ProjectX.OnlinePlayer_X.OnNewGame",
   //      std::bind(&Dashboard::isGamePlaying, this));
}


void Dashboard::onLoad() {
	this->log("Dashboard plugin started..");
    elapsedIntervals = 0;
	AWSOps();
	this->loadHooks();
	
}


bool Dashboard::isGamePaused() {
    this->log("Game play paused..");
    gamePaused = false; 
    return gamePaused;
}


bool Dashboard::isGamePlaying() {
    this->log("Game play resumed..");
    gamePaused = false; 
    return !gamePaused;
}


bool Dashboard::saveGameID(const std::string& gameID) {

    Aws::S3::S3Client s3_client;
    std::string bucketName = "rocket-league-lookup";
    std::string objectKey = gameID;  // Assuming Game_ID itself can be used as the object key

    Aws::S3::Model::PutObjectRequest put_object_request;
    put_object_request.WithBucket(bucketName).WithKey(objectKey);

    // Set up the request body, assuming you want to upload the gameID string
    std::shared_ptr<Aws::IOStream> input_data = Aws::MakeShared<Aws::StringStream>("PutObjectInputStream");
    *input_data << gameID;
    put_object_request.SetBody(input_data);

    auto put_object_outcome = s3_client.PutObject(put_object_request);

    if (put_object_outcome.IsSuccess()) {
        this->log("Successfully uploaded Game_ID " + gameID);
        return true;
    } else {
        this->log("Failed to upload Game_ID " + gameID + ": " + put_object_outcome.GetError().GetMessage());
        return false;
    }
    
}


void Dashboard::AWSOps() {
    // DynamoDB Operations
    {
        dynamoClient = std::make_shared<Aws::DynamoDB::DynamoDBClient>();
        Aws::DynamoDB::Model::ListTablesRequest req;
        auto outcome = dynamoClient->ListTables(req);

        if (outcome.IsSuccess()) {
            this->log("Your DynamoDB tables:");

            Aws::Vector<Aws::String> table_list = outcome.GetResult().GetTableNames();

            for (auto const& table_name : table_list) {
                this->log(table_name);
            }
        }
        else {
            this->log("ListTables error: " + outcome.GetError().GetExceptionName() + " - " + outcome.GetError().GetMessage());
        }
    }

    // S3 Operations
    {   
        using namespace Aws;
        S3::S3Client client;
        auto outcome = client.ListBuckets();

        if (outcome.IsSuccess()) {
            this->log("Your S3 buckets:");

            Aws::Vector<Aws::S3::Model::Bucket> bucket_list = outcome.GetResult().GetBuckets();

            for (auto const& bucket : bucket_list) {
                this->log(bucket.GetName().c_str());
            }
        }
        else {
            this->log("ListBuckets error: " + outcome.GetError().GetExceptionName() + " - " + outcome.GetError().GetMessage());
        }
    }

}


std::pair<std::string, double> Dashboard::tableCalcs(
    const std::string &timeRemainingString,
    const std::string& team0Score, const std::string& team1Score)
{
    // Step 1: Calculate the Score Differential
    // Convert team scores to integers
    int team0ScoreInt = std::stoi(team0Score);
    int team1ScoreInt = std::stoi(team1Score);
    int Score_Differential = team0ScoreInt - team1ScoreInt;

    // Step 2: Determine the Current Winner
    std::string Current_Winner;
    if (Score_Differential == 1) {
        Current_Winner = "TEAM0_up1";
    } else if (Score_Differential == 2) {
        Current_Winner = "TEAM0_up2";
    } else if (Score_Differential == 3) {
        Current_Winner = "TEAM0_up3";
    } else if (Score_Differential >= 4) {
        Current_Winner = "TEAM0_up4";
    } else if (Score_Differential == -1) {
        Current_Winner = "TEAM1_up1";
    } else if (Score_Differential == -2) {
        Current_Winner = "TEAM1_up2";
    } else if (Score_Differential == -3) {
        Current_Winner = "TEAM1_up3";
    } else if (Score_Differential <= -4) {
        Current_Winner = "TEAM1_up4";
    } else if (Score_Differential == 0) {
        Current_Winner = "TEAM*_up0";
    } else {
        Current_Winner = "Tied_up0";
    }

    // Step 3: Extract Predicted Winner
    std::string Predicted_Winner = Current_Winner.substr(0, 5);

    // Step 4: Calculate Win Probability
    double Win_Probability = dataMap[timeRemainingString][Current_Winner.substr(6, 9)];

    // Return Predicted_Winner and Win_Probability as a pair
    return std::make_pair(Predicted_Winner, Win_Probability);

}


std::string Dashboard::getCurrentTime() {
    // Get current time with high resolution
    auto now = std::chrono::system_clock::now();
    auto now_time_t = std::chrono::system_clock::to_time_t(now);
    auto now_milliseconds = std::chrono::duration_cast<std::chrono::milliseconds>(now.time_since_epoch()) % 1000;

    // Convert to tm structure
    std::tm* localTime = std::localtime(&now_time_t);

    // Create a stringstream to format time
    std::stringstream timeStream;
    timeStream << std::setw(2) << std::setfill('0') << localTime->tm_hour
               << std::setw(2) << std::setfill('0') << localTime->tm_min
               << std::setw(2) << std::setfill('0') << localTime->tm_sec
               << std::setw(3) << std::setfill('0') << now_milliseconds.count();

    // Return the formatted time as a string
    return timeStream.str();
}

Vector Dashboard::Rotate(Vector aVec, double roll, double yaw, double pitch)
{
	float sx = sin(roll);
	float cx = cos(roll);
	float sy = sin(yaw);
	float cy = cos(yaw);
	float sz = sin(pitch);
	float cz = cos(pitch);

	aVec = Vector(aVec.X, aVec.Y * cx - aVec.Z * sx, aVec.Y * sx + aVec.Z * cx);  //2  roll?
	aVec = Vector(aVec.X * cz - aVec.Y * sz, aVec.X * sz + aVec.Y * cz, aVec.Z); //1   pitch?
	aVec = Vector(aVec.X * cy + aVec.Z * sy, aVec.Y, -aVec.X * sy + aVec.Z * cy);  //3  yaw?

	// ugly fix to change coordinates to Unreal's axes
	float tmp = aVec.Z;
	aVec.Z = aVec.Y;
	aVec.Y = tmp;
	return aVec;
}


void Dashboard::getCarLocationAndRotation(CarWrapper car) {
    // Get the car's position and rotation
    Vector v = car.GetLocation();
    Rotator r = car.GetRotation();

    double dPitch = (double)r.Pitch / 32768.0 * 3.14159;
    double dYaw = (double)r.Yaw / 32768.0 * 3.14159;
    double dRoll = (double)r.Roll / 32768.0 * 3.14159;

    Vector vecCarRot;
    vecCarRot = Rotate(v, dRoll, -dYaw, dPitch);
    Quat rotationQuat = RotatorToQuat(r);
    Vector rotatedPosition = RotateVectorWithQuat(Vector(vecCarRot), (rotationQuat));

}
    


void Dashboard::uploadToDynamoDB(
const std::string& gameID, const std::string& timeRemainingString, 
const std::string& team0Name, const std::string& team1Name, 
const std::string& team0Score, const std::string& team1Score, 
const std::string& Predicted_Winner, const std::string& WinProbString,
const std::string& team0PlayerName1, const std::string& team0PlayerName2, 
const std::string& team1PlayerName1, const std::string& team1PlayerName2,
double team0Player1CarLocationX, double team0Player1CarLocationY, double team0Player1CarLocationZ,
double team0Player2CarLocationX, double team0Player2CarLocationY, double team0Player2CarLocationZ,
double team1Player1CarLocationX, double team1Player1CarLocationY, double team1Player1CarLocationZ,
double team1Player2CarLocationX, double team1Player2CarLocationY, double team1Player2CarLocationZ,
const std::string& team0Player1FlipReset, const std::string& team0Player2FlipReset, 
const std::string& team1Player1FlipReset, const std::string& team1Player2FlipReset) {
    using namespace Aws::DynamoDB::Model;

    PutItemRequest putItemRequest;
    // Set table name
    putItemRequest.SetTableName("events_rocket_league");

    // Create an item with string and number attributes
    Aws::Map<Aws::String, AttributeValue> item;
    item["Game_ID"] = AttributeValue().SetS(gameID);
    item["Time_Remaining"] = AttributeValue().SetN(timeRemainingString); 
    item["Team0_Name"] = AttributeValue().SetS(team0Name);
    item["Team1_Name"] = AttributeValue().SetS(team1Name);
    item["Team0_Score"] = AttributeValue().SetN(team0Score);
    item["Team1_Score"] = AttributeValue().SetN(team1Score);
	item["Predicted_Winner"] = AttributeValue().SetS(Predicted_Winner);
	item["Win_Probability"] = AttributeValue().SetN(WinProbString);
    item["team0_PlayerName1"] = AttributeValue().SetS(team0PlayerName1);
    item["team0_PlayerName2"] = AttributeValue().SetS(team0PlayerName2);
    item["team1_PlayerName1"] = AttributeValue().SetS(team1PlayerName1);
    item["team1_PlayerName2"] = AttributeValue().SetS(team1PlayerName2);
    item["team0_Player1_Car_Location_X"] = AttributeValue().SetN(std::to_string(team0Player1CarLocationX));
    item["team0_Player1_Car_Location_Y"] = AttributeValue().SetN(std::to_string(team0Player1CarLocationY));
    item["team0_Player1_Car_Location_Z"] = AttributeValue().SetN(std::to_string(team0Player1CarLocationZ));
    item["team0_Player2_Car_Location_X"] = AttributeValue().SetN(std::to_string(team0Player2CarLocationX));
    item["team0_Player2_Car_Location_Y"] = AttributeValue().SetN(std::to_string(team0Player2CarLocationY));
    item["team0_Player2_Car_Location_Z"] = AttributeValue().SetN(std::to_string(team0Player2CarLocationZ));
    item["team1_Player1_Car_Location_X"] = AttributeValue().SetN(std::to_string(team1Player1CarLocationX));
    item["team1_Player1_Car_Location_Y"] = AttributeValue().SetN(std::to_string(team1Player1CarLocationY));
    item["team1_Player1_Car_Location_Z"] = AttributeValue().SetN(std::to_string(team1Player1CarLocationZ));
    item["team1_Player2_Car_Location_X"] = AttributeValue().SetN(std::to_string(team1Player2CarLocationX));
    item["team1_Player2_Car_Location_Y"] = AttributeValue().SetN(std::to_string(team1Player2CarLocationY));
    item["team1_Player2_Car_Location_Z"] = AttributeValue().SetN(std::to_string(team1Player2CarLocationZ));
    item["team0_Player1_Flip_Reset"] = AttributeValue().SetS(team0Player1FlipReset);
    item["team0_Player2_Flip_Reset"] = AttributeValue().SetS(team0Player2FlipReset);
    item["team1_Player1_Flip_Reset"] = AttributeValue().SetS(team1Player1FlipReset);
    item["team1_Player2_Flip_Reset"] = AttributeValue().SetS(team1Player2FlipReset);


    // Set the item in the put request
    putItemRequest.SetItem(item);

    // Send the PutItem request
    auto outcome = dynamoClient->PutItem(putItemRequest);

    if (outcome.IsSuccess()) {
        this->log("Item successfully put into table.");
    } else {
        this->log("Error putting item into table: " + outcome.GetError().GetMessage());
    }
}


void Dashboard::getGameData() {

    // Print output to console
    this->log("Reached Get Game Data..\n");
    
    // Print output to console
    this->log("Get Game Data starting..\n");

    if(!gameWrapper) {
        return;
    }
    // Check if in online game
    bool isInOnlineGame = gameWrapper->IsInOnlineGame() || gameWrapper->IsSpectatingInOnlineGame();

    if (isInOnlineGame && !gamePaused) {
        // Retrieve Match GUID, game count down time, team names, and scores
        ServerWrapper server = gameWrapper->GetOnlineGame();
        
        this->log("Checking game server..\n"); 
         
        // Check if server is null and exit function if true. Retry after 0.5 seconds
        if (server.IsNull()) {
            this->log("Game server is null..\n");
            return;
        }

        // Log that a game server was found
        this->log("Game server found..\n");

        std::string gameID = server.GetMatchGUID();
        if (!isNewGameFlag) {
            saveGameID(gameID);
            isNewGameFlag = true; // Set the flag to true
        }

        const int timeRemaining = server.GetbOverTime() ? -server.GetSecondsRemaining() : server.GetSecondsRemaining();
        // get current time as 24 hour string
        std::string currentTime = getCurrentTime();
        // Convert game time remaining  to string
        std::string gameTimeString = std::to_string(timeRemaining); 
        // Append current time with timeRemainingString to create a unique time_remaining_ sort key
        std::string timeRemainingString = gameTimeString + "." + currentTime; 

        ServerWrapper gameState = gameWrapper->GetCurrentGameState();
        if(gameState.IsNull()) {
            return;
        }
        auto teams = gameState.GetTeams();
        if(teams.IsNull() && teams.Count() < 2) { 
            return;
        }

        TeamWrapper teams0 = teams.Get(0);
        TeamWrapper teams1 = teams.Get(1);

        // Log that a game server was found
        this->log("Teams found..\n"); 

        if(teams0.IsNull() || teams1.IsNull()) {
            return;
        }

        std::string team0Name = teams0.GetTeamName().ToString();
        std::string team1Name = teams1.GetTeamName().ToString();
        std::string team0Score = std::to_string(teams0.GetScore());
        std::string team1Score = std::to_string(teams1.GetScore());
        

        // Retrieve Player IDs, names, and goals
        ArrayWrapper<PriWrapper> pris = server.GetPRIs();

        std::string team0PlayerName1 = "";
        std::string team0PlayerName2 = "";
        std::string team1PlayerName1 = "";
        std::string team1PlayerName2 = "";

        double team0Player1CarLocationX = 0.0;
        double team0Player1CarLocationY = 0.0;
        double team0Player1CarLocationZ = 0.0;

        double team0Player2CarLocationX = 0.0;
        double team0Player2CarLocationY = 0.0;
        double team0Player2CarLocationZ = 0.0;

        double team1Player1CarLocationX = 0.0;
        double team1Player1CarLocationY = 0.0;
        double team1Player1CarLocationZ = 0.0;

        double team1Player2CarLocationX = 0.0;
        double team1Player2CarLocationY = 0.0;
        double team1Player2CarLocationZ = 0.0;

        std::string team0Player1FlipReset = "";
        std::string team0Player2FlipReset = "";
        std::string team1Player1FlipReset = "";
        std::string team1Player2FlipReset = "";

        int team0PlayerCount = 0;
        int team1PlayerCount = 0;


        for (int i = 0; i < pris.Count(); i++) {
            PriWrapper player = pris.Get(i);
     
            if (player.IsNull()) {
                continue;
            }

            TeamInfoWrapper teamInfo = player.GetTeam();
            
            if(teamInfo.IsNull()) { 
                continue;
            }

            int playerTeam = teamInfo.GetTeamIndex();
            std::string playerName = player.GetPlayerName().ToString();

            CarWrapper playerCar = player.GetCar();
               if (playerCar.IsNull())
               continue;
        
            // Log that a game server was found
            this->log("Cars found..\n");

            CarWrapper hasFlip = playerCar.HasFlip();
               if (hasFlip.IsNull())
               continue;

            std::string flip_string;
	        if (playerCar.HasFlip()) {
		            flip_string = "FLIP";
            }
	        else {
		       flip_string = "NO FLIP";
	        }

            if (playerTeam == 0 && team0PlayerCount < 2) {
                if (team0PlayerCount == 0) {
                    team0PlayerName1 = playerName;
                    team0Player1CarLocationX = playerCar.GetLocation().X;
                    team0Player1CarLocationY = playerCar.GetLocation().Y;
                    team0Player1CarLocationZ = playerCar.GetLocation().Z;
                    team0Player1FlipReset = flip_string;
                } else {
                    team0PlayerName2 = playerName;
                    team0Player2CarLocationX = playerCar.GetLocation().X;
                    team0Player2CarLocationY = playerCar.GetLocation().Y;
                    team0Player2CarLocationZ = playerCar.GetLocation().Z;
                    team0Player2FlipReset = flip_string;
                }
                team0PlayerCount++;
                } else if (playerTeam == 1 && team1PlayerCount < 2) {
                if (team1PlayerCount == 0) {
                    team1PlayerName1 = playerName;
                    team1Player1CarLocationX = playerCar.GetLocation().X;
                    team1Player1CarLocationY = playerCar.GetLocation().Y;
                    team1Player1CarLocationZ = playerCar.GetLocation().Z;
                    team1Player1FlipReset = flip_string;
                } else {
                    team1PlayerName2 = playerName;
                    team1Player2CarLocationX = playerCar.GetLocation().X;
                    team1Player2CarLocationY = playerCar.GetLocation().Y;
                    team1Player2CarLocationZ = playerCar.GetLocation().Z;
                    team1Player2FlipReset = flip_string;
                }
                team1PlayerCount++;
            }

        }
		
		
		std::pair<std::string, double> tableCalcsResult = tableCalcs(gameTimeString, team0Score, team1Score);
        std::string Predicted_Winner = tableCalcsResult.first;
        double Win_Probability = tableCalcsResult.second;
        std::string winProbString = std::to_string(Win_Probability);
        std::string team0Player1CarLocation = "X: " + std::to_string(team0Player1CarLocationX) + ", Y: " + std::to_string(team0Player1CarLocationY) + ", Z: " + std::to_string(team0Player1CarLocationZ);
        std::string team0Player2CarLocation = "X: " + std::to_string(team0Player2CarLocationX) + ", Y: " + std::to_string(team0Player2CarLocationY) + ", Z: " + std::to_string(team0Player2CarLocationZ);
        std::string team1Player1CarLocation = "X: " + std::to_string(team1Player1CarLocationX) + ", Y: " + std::to_string(team1Player1CarLocationY) + ", Z: " + std::to_string(team1Player2CarLocationZ);
        std::string team1Player2CarLocation = "X: " + std::to_string(team1Player2CarLocationX) + ", Y: " + std::to_string(team1Player2CarLocationY) + ", Z: " + std::to_string(team1Player2CarLocationZ);

        // Print output to console
        this->log("Game ID: " + gameID + "\n");
		this->log("Team: " + team0Name + " Score: " + team0Score + " | Team: " + team1Name + " Score: "  + team1Score + "\n");
        this->log("Time Remaining: " + timeRemainingString + " Predicted Winner: " + Predicted_Winner + " Win Probability: " + winProbString + "\n"); 
        this->log("Team: " + team0Name + " Score: " + team0Score + " | Team: " + team1Name + " Score: "  + team1Score + "\n");
        this->log("Team1|Player1: " + team0PlayerName1 + " | FlipReset:" + team0Player1FlipReset + " | Location:" + team0Player1CarLocation + "\n" );
        this->log("Team1|Player2: " + team0PlayerName2 + " | FlipReset:" + team0Player2FlipReset + " | Location:" + team0Player2CarLocation + "\n" ); 
        this->log("Team2|Player1: " + team1PlayerName1 + " | FlipReset:" + team1Player1FlipReset + " | Location:" + team1Player1CarLocation + "\n" ); 
        this->log("Team2|Player2: " + team1PlayerName2 + " | FlipReset:" + team1Player2FlipReset + " | Location:" + team1Player2CarLocation + "\n" );
        
        // Upload to DynamoDB
        uploadToDynamoDB(gameID, timeRemainingString, 
                        team0Name, team1Name,
                        team0Score, team1Score, 
						Predicted_Winner, winProbString,
                        team0PlayerName1, team0PlayerName2, 
                        team1PlayerName1, team1PlayerName2,
                        team0Player1CarLocationX, team0Player1CarLocationY, team0Player1CarLocationZ,
                        team0Player2CarLocationX, team0Player2CarLocationY, team0Player2CarLocationZ,
                        team1Player1CarLocationX, team1Player1CarLocationY, team1Player1CarLocationZ,
                        team1Player2CarLocationX, team1Player2CarLocationY, team1Player2CarLocationZ,
                        team0Player1FlipReset, team0Player2FlipReset, 
                        team1Player1FlipReset, team1Player2FlipReset);

        // Increment the elapsed intervals
        elapsedIntervals++;

        if (elapsedIntervals < 10000) {
            // Schedule this method to run again after 0.75 seconds
            gameWrapper->SetTimeout([this](GameWrapper* gw) {
                getGameData();
            }, 0.75f);
        }
        
    } // End of if(isInOnlineGame)
} // End of function


void Dashboard::onUnload() {
    gameWrapper->UnhookEvent("Function TAGame.GameEvent_TA.StartEvent");
    gameWrapper->UnhookEvent("Function ProjectX.GRI_X.EventGameStarted");
    gameWrapper->UnhookEvent("Function TAGame.GameEvent_TA.StartCountDown");
    gameWrapper->UnhookEvent("Function GameEvent_Soccar_TA.Active.EndState");
	this->log("Dashboard plugin unloaded..");
}


Dashboard::~Dashboard() {
    // Shut down the AWS SDK
    Aws::SDKOptions options;
    Aws::ShutdownAPI(options);
}

